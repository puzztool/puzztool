{"version":3,"file":"static/js/226.959be15a.chunk.js","mappings":"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","sources":["../node_modules/react-bootstrap/esm/Alert.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","webpack://puzztool/./src/Features/WordSearch/WordSearchOutput.module.scss?a362","Features/WordSearch/WordSearchOutput.tsx","webpack://puzztool/./src/Features/WordSearch/WordSearchComponent.module.scss?3ebf","Features/WordSearch/WordSearchComponent.tsx","Features/WordSearch/index.tsx","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Container.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport divWithClassName from './divWithClassName';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nconst AlertLink = createWithBsPrefix('alert-link', {\n  Component: Anchor\n});\nconst defaultProps = {\n  variant: 'primary',\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show,\n    closeLabel,\n    closeVariant,\n    className,\n    children,\n    variant,\n    onClose,\n    dismissible,\n    transition,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", { ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { hasChildOfType } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = !children && label != null && label !== false || hasChildOfType(children, FormCheckLabel);\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, hasLabel && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"WordSearchOutput_container__HpYBH\",\"highlightChar\":\"WordSearchOutput_highlightChar__9jRQz\"};","import Table from \"react-bootstrap/Table\";\nimport {\n  WordSearchSolver,\n  WordSearchResult,\n  WordSearchDirection,\n} from \"puzzle-lib\";\nimport styles from \"./WordSearchOutput.module.scss\";\n\ninterface Props {\n  gridInputText: string;\n  useCardinals: boolean;\n  useDiagonals: boolean;\n  canBend: boolean;\n  wordListInputText: string;\n}\n\nfunction getWordSearchDirection(useCardinals: boolean, useDiagonals: boolean) {\n  if (useCardinals && useDiagonals) {\n    return WordSearchDirection.CardinalAndDiagonal;\n  } else if (useCardinals) {\n    return WordSearchDirection.Cardinal;\n  } else if (useDiagonals) {\n    return WordSearchDirection.Diagonal;\n  }\n\n  return WordSearchDirection.None;\n}\n\nfunction splitLines(str: string) {\n  return str.split(/\\r?\\n/);\n}\n\nfunction highlightArray(inputGrid: string[][], results: WordSearchResult[]) {\n  const shouldHighlight: boolean[][] = [];\n\n  for (const line of inputGrid) {\n    const hightlightLine = Array.from({ length: line.length }, () => false);\n    shouldHighlight.push(hightlightLine);\n  }\n\n  for (const result of results) {\n    for (const point of result.points) {\n      shouldHighlight[point.y][point.x] = true;\n    }\n  }\n\n  return shouldHighlight;\n}\n\nfunction getGridHighlights(\n  grid: string[][],\n  wordsToFind: string[],\n  direction: WordSearchDirection,\n  canBend: boolean\n) {\n  const solver = new WordSearchSolver();\n  solver.setDirections(direction);\n  solver.setCanBend(canBend);\n  solver.setGrid(grid);\n  solver.setWords(wordsToFind);\n  const results = solver.findWords();\n\n  return highlightArray(grid, results);\n}\n\nfunction getColumnClassName(shouldHighlight: boolean) {\n  return shouldHighlight ? styles.highlightChar : \"\";\n}\n\nfunction WordSearchOutput(props: Props) {\n  const gridInputText = props.gridInputText.trim();\n  if (!gridInputText) {\n    return null;\n  }\n\n  const lines = splitLines(gridInputText);\n  const grid: string[][] = [];\n  for (const line of lines) {\n    grid.push(line.split(\"\"));\n  }\n\n  // Process direction settings\n  const direction = getWordSearchDirection(\n    props.useCardinals,\n    props.useDiagonals\n  );\n\n  // Split on newlines, trim any whitespace, and filter out empty lines.\n  const wordList = splitLines(props.wordListInputText).filter(\n    (word) => word.length > 0\n  );\n\n  const shouldHighlight = getGridHighlights(\n    grid,\n    wordList,\n    direction,\n    props.canBend\n  );\n\n  return (\n    <Table className={styles.container} borderless={true}>\n      <tbody>\n        {grid.map((row, rowIndex) => (\n          <tr key={rowIndex}>\n            {row.map((col, colIndex) => (\n              <td\n                className={getColumnClassName(\n                  shouldHighlight[rowIndex][colIndex]\n                )}\n                key={`${rowIndex},${colIndex}`}\n              >\n                {col}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default WordSearchOutput;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"WordSearchComponent_container__egjnS\",\"listInput\":\"WordSearchComponent_listInput__k7naQ\",\"gridInput\":\"WordSearchComponent_gridInput__Ad69f\"};","import { ChangeEvent } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport FormCheck from \"react-bootstrap/FormCheck\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Row from \"react-bootstrap/Row\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { useFocusInput } from \"../../Hooks/FocusInput\";\nimport { RootState } from \"../../Store/rootReducer\";\nimport WordSearchOutput from \"./WordSearchOutput\";\nimport {\n  setCanBend,\n  setGrid,\n  setUseCardinals,\n  setUseDiagonals,\n  setWordList,\n} from \"./wordSearchSlice\";\nimport styles from \"./WordSearchComponent.module.scss\";\n\nconst mapStateToProps = (state: RootState) => ({\n  canBend: state.wordSearch.canBend,\n  grid: state.wordSearch.grid,\n  useCardinals: state.wordSearch.useCardinals,\n  useDiagonals: state.wordSearch.useDiagonals,\n  wordList: state.wordSearch.wordList,\n});\nconst mapDispatchToProps = {\n  setCanBend,\n  setGrid,\n  setUseCardinals,\n  setUseDiagonals,\n  setWordList,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype Props = ConnectedProps<typeof connector>;\n\nfunction WordSearchComponent(props: Props) {\n  const inputRef = useFocusInput();\n\n  function onGridTextChanged(event: ChangeEvent<HTMLTextAreaElement>) {\n    props.setGrid(event.currentTarget.value);\n  }\n\n  function onListTextChanged(event: ChangeEvent<HTMLTextAreaElement>) {\n    props.setWordList(event.currentTarget.value);\n  }\n\n  function onCardinalCheckboxChange(event: ChangeEvent<HTMLInputElement>) {\n    props.setUseCardinals(event.currentTarget.checked);\n  }\n\n  function onDiagonalCheckboxChange(event: ChangeEvent<HTMLInputElement>) {\n    props.setUseDiagonals(event.currentTarget.checked);\n  }\n\n  function onSetCanBendChange(event: ChangeEvent<HTMLInputElement>) {\n    props.setCanBend(event.currentTarget.checked);\n  }\n\n  function renderEmptyDirection() {\n    if (!props.useCardinals && !props.useDiagonals) {\n      return (\n        <Alert variant=\"warning\">\n          No directions are selected. No results will be shown.\n        </Alert>\n      );\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <Container fluid={true}>\n        <Row className=\"g-0\">\n          <Col md={4}>\n            <Card className={styles.listInput}>\n              <Card.Header>\n                Enter the list of words to find, one word per line\n              </Card.Header>\n              <Card.Body>\n                <FormControl\n                  as=\"textarea\"\n                  onChange={onListTextChanged}\n                  placeholder=\"Word List To Find\"\n                  value={props.wordList}\n                />\n                {renderEmptyDirection()}\n                <FormCheck\n                  checked={props.useDiagonals}\n                  id=\"WordSearchComponent-checkbox-diagonal\"\n                  label=\"Use diagonal directions\"\n                  onChange={onDiagonalCheckboxChange}\n                  type=\"checkbox\"\n                />\n                <FormCheck\n                  checked={props.useCardinals}\n                  id=\"WordSearchComponent-checkbox-cardinal\"\n                  label=\"Use cardinal directions\"\n                  onChange={onCardinalCheckboxChange}\n                  type=\"checkbox\"\n                />\n                <FormCheck\n                  checked={props.canBend}\n                  id=\"WordSearchComponent-checkbox-bend\"\n                  label=\"Words can bend (may not be straight lines)\"\n                  onChange={onSetCanBendChange}\n                  type=\"checkbox\"\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md={8}>\n            <Card className={styles.gridInput}>\n              <Card.Header>\n                Enter the word search grid, one row of letters per line\n              </Card.Header>\n              <Card.Body>\n                <FormControl\n                  as=\"textarea\"\n                  onChange={onGridTextChanged}\n                  placeholder=\"Grid Text\"\n                  ref={inputRef}\n                  spellCheck={false}\n                  value={props.grid}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Row className=\"g-0\">\n          <Col md={12}>\n            <Card>\n              <Card.Header>Output</Card.Header>\n              <Card.Body>\n                <WordSearchOutput\n                  gridInputText={props.grid}\n                  useCardinals={props.useCardinals}\n                  useDiagonals={props.useDiagonals}\n                  canBend={props.canBend}\n                  wordListInputText={props.wordList}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default connector(WordSearchComponent);\n","import PuzzToolPage from \"../../Common/PuzzToolPage\";\nimport WordSearchComponent from \"./WordSearchComponent\";\n\nfunction WordSearch() {\n  return (\n    <PuzzToolPage title=\"Word Search\">\n      <WordSearchComponent />\n    </PuzzToolPage>\n  );\n}\n\nexport default WordSearch;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const breakpoints = useBootstrapBreakpoints();\n  const spans = [];\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  fluid: false\n};\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;"],"names":["DivStyledAsH4","divWithClassName","displayName","AlertHeading","createWithBsPrefix","Component","AlertLink","Anchor","defaultProps","variant","show","transition","Fade","closeLabel","Alert","React","uncontrolledProps","ref","useUncontrolled","bsPrefix","closeVariant","className","children","onClose","dismissible","props","prefix","useBootstrapPrefix","handleClose","useEventCallback","e","Transition","alert","_jsxs","role","undefined","classNames","_jsx","CloseButton","onClick","unmountOnExit","in","Object","assign","Link","Heading","FormCheckInput","id","type","isValid","isInvalid","as","controlId","useContext","FormContext","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","inline","disabled","feedbackTooltip","feedback","feedbackType","style","title","label","innerFormContext","useMemo","hasLabel","hasChildOfType","input","value","_Fragment","Feedback","tooltip","Input","Label","splitLines","str","split","getGridHighlights","grid","wordsToFind","direction","canBend","solver","WordSearchSolver","setDirections","setCanBend","setGrid","setWords","inputGrid","results","shouldHighlight","line","hightlightLine","Array","from","length","push","result","points","point","y","x","highlightArray","findWords","getColumnClassName","styles","gridInputText","trim","lines","useCardinals","useDiagonals","WordSearchDirection","wordListInputText","filter","word","Table","borderless","map","row","rowIndex","col","colIndex","mapDispatchToProps","setUseCardinals","setUseDiagonals","setWordList","connect","state","wordSearch","wordList","inputRef","useFocusInput","Container","fluid","Row","Col","md","Card","FormControl","onChange","event","currentTarget","placeholder","renderEmptyDirection","checked","spellCheck","PuzzToolPage","breakpoints","useBootstrapBreakpoints","spans","classes","forEach","brkPoint","span","offset","order","propValue","infix","useCol","colProps","suffix","decoratedBsPrefix","sizePrefix","cols","striped","bordered","hover","size","responsive","table","responsiveClass"],"sourceRoot":""}