{"version":3,"sources":["Features/AppNav/index.module.scss","Common/PuzzToolPage/index.module.scss","Features/Cipher/KeyedCipherStream/index.module.scss","Common/PuzzToolPage/index.tsx","Hooks/FocusInput.ts","Features/Encoding/Braille/brailleEncodingSlice.ts","Features/Encoding/Morse/morseEncodingSlice.ts","Features/Encoding/Semaphore/semaphoreEncodingSlice.ts","Features/Resistor/resistorSlice.ts","Data/RouteData.ts","Features/Cipher/Autokey/autokeyCipherSlice.ts","Features/Cipher/Caesar/caesarCipherSlice.ts","Features/Cipher/Vigenere/vigenereCipherSlice.ts","Features/Encoding/AutoConvert/autoConvertSlice.ts","Features/Encoding/Character/characterEncodingSlice.ts","Features/WordSearch/wordSearchSlice.ts","Features/Error/NotFound.module.scss","App.module.scss","Images/puzztool_banner_white.svg","Features/AppNav/AppNavCategory.tsx","Features/AppNav/index.tsx","Features/Error/NotFound.tsx","Features/Loading/index.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","Features/Cipher/cipherReducer.ts","Features/Encoding/encodingReducer.ts","Store/rootReducer.ts","Store/configureStore.ts","index.tsx","Features/Loading/index.module.scss","Features/Cipher/KeyedCipherStream/index.tsx","Common/PuzzToolDocumentTitle.tsx"],"names":["module","exports","PuzzToolPage","children","description","title","className","styles","header","renderDescription","useFocusInput","useCallback","node","focus","initialState","encoding","BrailleEncoding","None","stream","brailleEncodingSlice","createSlice","name","reducers","append","state","action","push","payload","backspace","pop","clear","Object","assign","selectTab","selectedTab","undefined","setEncoding","space","actions","morseEncodingSlice","slice","directions","semaphoreEncodingSlice","length","setDirections","resistorSlice","bands","setBand","bandIndex","colorIndex","getCategories","url","rootUrl","conversion","Conversion","decrypt","secret","text","autokeyCipherSlice","setConversion","setSecret","setText","caesarCipherSlice","vigenereCipherSlice","homogeneous","autoConvertSlice","setHomogeneous","characterEncodingSlice","wordSearchSlice","canBend","grid","useCardinals","useDiagonals","wordList","setCanBend","setGrid","setUseCardinals","setUseDiagonals","setWordList","NavbarCategory","props","categoryName","category","onClick","e","preventDefault","to","NavDropdown","id","toLowerCase","replace","concat","map","child","Item","eventKey","AppNav","Navbar","bg","container","collapseOnSelect","expand","onSelect","document","activeElement","blur","sticky","variant","Brand","logo","src","PuzztoolBannerWhite","alt","Toggle","Collapse","Nav","AppNavCategory","Link","href","rel","target","NotFound","Loading","error","content","timedOut","pastDelay","spinner","defaultTimeout","WordSearch","Loadable","loader","loading","timeout","AutoConvert","Autokey","Braille","Caesar","Character","Home","Morse","Nato","NavalFlag","Pigpen","Resistor","Semaphore","Settings","Vigenere","App","PuzzToolDocumentTitle","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","autokey","autokeyCipherReducer","caesar","caesarCipherReducer","vigenere","vigenereCipherReducer","autoConvert","autoConvertReducer","braille","brailleEncodingReducer","character","characterEncodingReducer","morse","morseEncodingReducer","semaphore","semaphoreEncodingReducer","cipherPersistConfig","key","storage","encodingPersistConfig","createRootReducer","cipher","persistReducer","cipherReducer","encodingReducer","resistor","resistorReducer","wordSearch","wordSearchReducer","persistConfig","configurePuzzToolStore","rootReducer","persistedReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","baseUrl","getElementsByTagName","getAttribute","history","createBrowserHistory","basename","ReactDOM","render","StrictMode","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","KeyedCipherStream","inputRef","input","Header","prompt","Body","onChange","event","onTextChange","currentTarget","value","placeholder","ref","onSecretChange","onConversionChange","type","encrypt","onClear","Error","calculateOutput","PUZZTOOL_TITLE"],"mappings":"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","file":"static/js/main.e88be4bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AppNav_container__6WTjY\",\"logo\":\"AppNav_logo__wlLUg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"PuzzToolPage_header__39EuD\",\"title\":\"PuzzToolPage_title__1UlFh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"KeyedCipherStream_container__2Hs_l\",\"input\":\"KeyedCipherStream_input__3zMqf\"};","import { ReactChild } from \"react\";\nimport PuzzToolDocumentTitle from \"../PuzzToolDocumentTitle\";\nimport styles from \"./index.module.scss\";\n\ninterface Props {\n  children: ReactChild;\n  description?: ReactChild;\n  title: string;\n}\n\nfunction PuzzToolPage({ children, description, title }: Props) {\n  function renderDescription() {\n    if (description) {\n      return <div>{description}</div>;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <PuzzToolDocumentTitle title={title}>\n      <>\n        <div className={styles.header}>\n          <h2 className={styles.title}>{title}</h2>\n          {renderDescription()}\n        </div>\n        {children}\n      </>\n    </PuzzToolDocumentTitle>\n  );\n}\n\nexport default PuzzToolPage;\n","import { useCallback } from \"react\";\n\nexport function useFocusInput() {\n  // This callback is only executed once per change of the returned variable.\n  return useCallback((node) => {\n    if (node) {\n      node.focus();\n    }\n  }, []);\n}\n","import { BrailleEncoding } from \"puzzle-lib\";\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface State {\n  encoding: BrailleEncoding;\n  selectedTab?: string;\n  stream: BrailleEncoding[];\n}\n\nconst initialState: State = {\n  encoding: BrailleEncoding.None,\n  stream: [],\n};\n\nconst brailleEncodingSlice = createSlice({\n  name: \"brailleEncoding\",\n  initialState,\n  reducers: {\n    append(state, action: PayloadAction<BrailleEncoding>) {\n      state.encoding = BrailleEncoding.None;\n      state.stream.push(action.payload);\n    },\n    backspace(state) {\n      state.stream.pop();\n    },\n    clear(state) {\n      Object.assign(state, initialState);\n    },\n    selectTab(state, action: PayloadAction<string | null>) {\n      state.selectedTab = action.payload ?? undefined;\n    },\n    setEncoding(state, action: PayloadAction<BrailleEncoding>) {\n      state.encoding = action.payload;\n    },\n    space(state) {\n      state.stream.push(BrailleEncoding.None);\n    },\n  },\n});\n\nexport const { append, backspace, clear, selectTab, setEncoding, space } =\n  brailleEncodingSlice.actions;\n\nexport default brailleEncodingSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface State {\n  selectedTab?: string;\n  stream: string;\n}\n\nconst initialState: State = {\n  stream: \"\",\n};\n\nconst morseEncodingSlice = createSlice({\n  name: \"morseEncoding\",\n  initialState,\n  reducers: {\n    append(state, action: PayloadAction<string>) {\n      state.stream += action.payload;\n    },\n    backspace(state) {\n      state.stream = state.stream.slice(0, -1);\n    },\n    clear(state) {\n      Object.assign(state, initialState);\n    },\n    selectTab(state, action: PayloadAction<string | null>) {\n      state.selectedTab = action.payload ?? undefined;\n    },\n  },\n});\n\nexport const { append, backspace, clear, selectTab } =\n  morseEncodingSlice.actions;\n\nexport default morseEncodingSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { SemaphoreDirection } from \"puzzle-lib\";\n\ninterface State {\n  directions: SemaphoreDirection[];\n  selectedTab?: string;\n  stream: string;\n}\n\nconst initialState: State = {\n  directions: [],\n  stream: \"\",\n};\n\nconst semaphoreEncodingSlice = createSlice({\n  name: \"semaphoreEncoding\",\n  initialState,\n  reducers: {\n    append(state, action: PayloadAction<string>) {\n      state.directions.length = 0;\n      state.stream += action.payload;\n    },\n    backspace(state) {\n      state.stream = state.stream.slice(0, -1);\n    },\n    clear(state) {\n      Object.assign(state, initialState);\n    },\n    selectTab(state, action: PayloadAction<string | null>) {\n      state.selectedTab = action.payload ?? undefined;\n    },\n    setDirections(state, action: PayloadAction<SemaphoreDirection[]>) {\n      state.directions = action.payload;\n    },\n    space(state) {\n      state.stream += \" \";\n    },\n  },\n});\n\nexport const { append, backspace, clear, selectTab, setDirections, space } =\n  semaphoreEncodingSlice.actions;\n\nexport default semaphoreEncodingSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface State {\n  bands: number[];\n  selectedTab?: string;\n}\n\ninterface SetBandPayload {\n  bandIndex: number;\n  colorIndex: number;\n}\n\nconst initialState: State = {\n  // BLACK, BLACK, BLACK, <blank>, BROWN\n  bands: [0, 0, 0, -1, 1],\n};\n\nconst resistorSlice = createSlice({\n  name: \"resistor\",\n  initialState,\n  reducers: {\n    selectTab(state, action: PayloadAction<string | null>) {\n      state.selectedTab = action.payload ?? undefined;\n    },\n    setBand(state, action: PayloadAction<SetBandPayload>) {\n      const { bandIndex, colorIndex } = action.payload;\n      state.bands[bandIndex] = colorIndex;\n    },\n  },\n});\n\nexport const { selectTab, setBand } = resistorSlice.actions;\n\nexport default resistorSlice.reducer;\n","export interface RouteChild {\n  description: string;\n  name: string;\n  url: string;\n}\n\nexport interface RouteCategory {\n  children: RouteChild[];\n  description: string;\n  name: string;\n  rootUrl: string;\n}\n\nexport function getCategories(): RouteCategory[] {\n  return [\n    {\n      children: [\n        {\n          description: \"Word Search Solver\",\n          name: \"Word Search\",\n          url: \"/wordsearch\",\n        },\n      ],\n      description: \"Automated puzzle solvers\",\n      name: \"Solvers\",\n      rootUrl: \"/solvers\",\n    },\n    {\n      children: [\n        {\n          description: \" A Vignere cipher which uses plaintext as the key\",\n          name: \"Autokey\",\n          url: \"/autokey\",\n        },\n        {\n          description: \"Letters are shifted by a fixed value\",\n          name: \"Caesar\",\n          url: \"/caesar\",\n        },\n        {\n          description: \"Letters are mapped based on a key word\",\n          name: \"Vignere\",\n          url: \"/vigenere\",\n        },\n      ],\n      description: \"Scrambled letters\",\n      name: \"Ciphers\",\n      rootUrl: \"/cipher\",\n    },\n    {\n      children: [\n        {\n          description: \"Mapping numbers to letters (ASCII, Binary, Ordinal)\",\n          name: \"AutoConvert\",\n          url: \"/autoconvert\",\n        },\n        {\n          description: \"Six dots in a two-by-three grid\",\n          name: \"Braille\",\n          url: \"/braille\",\n        },\n        {\n          description: \"Dots and dashes with separations\",\n          name: \"Morse Code\",\n          url: \"/morse\",\n        },\n        {\n          description: \"Parts of a tic-tac-toe grid or X, some with dot\",\n          name: \"Pigpen\",\n          url: \"/pigpen\",\n        },\n        {\n          description: \" Positions of two different flags\",\n          name: \"Semaphore\",\n          url: \"/semaphore\",\n        },\n      ],\n      description: \"Different ways to represent letters\",\n      name: \"Encodings\",\n      rootUrl: \"/encoding\",\n    },\n    {\n      children: [\n        {\n          description: \"Static display of number to letter mapping\",\n          name: \"Character Encodings\",\n          url: \"/characterencodings\",\n        },\n        {\n          description: \"Words used to clearly identify a letter\",\n          name: \"NATO Alphabet\",\n          url: \"/nato\",\n        },\n        {\n          description: \"Different simple flags which convey a letter\",\n          name: \"Naval Flags\",\n          url: \"/navalflags\",\n        },\n        {\n          description: \"Find a resistor value using different colored bands\",\n          name: \"Resistors\",\n          url: \"/resistors\",\n        },\n      ],\n      description: \"Miscellaneous information\",\n      name: \"Reference\",\n      rootUrl: \"/reference\",\n    },\n  ];\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Conversion } from \"../KeyedCipherStream\";\n\ninterface State {\n  conversion: Conversion;\n  secret: string;\n  text: string;\n}\n\nconst initialState: State = {\n  conversion: Conversion.decrypt,\n  secret: \"\",\n  text: \"\",\n};\n\nconst autokeyCipherSlice = createSlice({\n  name: \"autokeyCipher\",\n  initialState,\n  reducers: {\n    clear(state) {\n      Object.assign(state, initialState);\n    },\n    setConversion(state, action: PayloadAction<Conversion>) {\n      state.conversion = action.payload;\n    },\n    setSecret(state, action: PayloadAction<string>) {\n      state.secret = action.payload;\n    },\n    setText(state, action: PayloadAction<string>) {\n      state.text = action.payload;\n    },\n  },\n});\n\nexport const { clear, setConversion, setSecret, setText } =\n  autokeyCipherSlice.actions;\n\nexport default autokeyCipherSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface State {\n  text: string;\n}\n\nconst initialState: State = {\n  text: \"\",\n};\n\nconst caesarCipherSlice = createSlice({\n  name: \"caesarCipher\",\n  initialState,\n  reducers: {\n    clear(state) {\n      Object.assign(state, initialState);\n    },\n    setText(state, action: PayloadAction<string>) {\n      state.text = action.payload;\n    },\n  },\n});\n\nexport const { clear, setText } = caesarCipherSlice.actions;\n\nexport default caesarCipherSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Conversion } from \"../KeyedCipherStream\";\n\ninterface State {\n  conversion: Conversion;\n  secret: string;\n  text: string;\n}\n\nconst initialState: State = {\n  conversion: Conversion.decrypt,\n  secret: \"\",\n  text: \"\",\n};\n\nconst vigenereCipherSlice = createSlice({\n  name: \"vigenereCipher\",\n  initialState,\n  reducers: {\n    clear(state) {\n      Object.assign(state, initialState);\n    },\n    setConversion(state, action: PayloadAction<Conversion>) {\n      state.conversion = action.payload;\n    },\n    setSecret(state, action: PayloadAction<string>) {\n      state.secret = action.payload;\n    },\n    setText(state, action: PayloadAction<string>) {\n      state.text = action.payload;\n    },\n  },\n});\n\nexport const { clear, setConversion, setSecret, setText } =\n  vigenereCipherSlice.actions;\n\nexport default vigenereCipherSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface State {\n  homogeneous: boolean;\n  text: string;\n}\n\nconst initialState: State = {\n  homogeneous: true,\n  text: \"\",\n};\n\nconst autoConvertSlice = createSlice({\n  name: \"autoConvert\",\n  initialState,\n  reducers: {\n    clear(state) {\n      Object.assign(state, initialState);\n    },\n    setHomogeneous(state, action: PayloadAction<boolean>) {\n      state.homogeneous = action.payload;\n    },\n    setText(state, action: PayloadAction<string>) {\n      state.text = action.payload;\n    },\n  },\n});\n\nexport const { clear, setHomogeneous, setText } = autoConvertSlice.actions;\n\nexport default autoConvertSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface State {\n  selectedTab?: string;\n}\n\nconst initialState: State = {};\n\nconst characterEncodingSlice = createSlice({\n  name: \"characterEncoding\",\n  initialState,\n  reducers: {\n    selectTab(state, action: PayloadAction<string | null>) {\n      state.selectedTab = action.payload ?? undefined;\n    },\n  },\n});\n\nexport const { selectTab } = characterEncodingSlice.actions;\n\nexport default characterEncodingSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface State {\n  canBend: boolean;\n  grid: string;\n  useCardinals: boolean;\n  useDiagonals: boolean;\n  wordList: string;\n}\n\nconst initialState: State = {\n  canBend: false,\n  grid: \"\",\n  useCardinals: true,\n  useDiagonals: true,\n  wordList: \"\",\n};\n\nconst wordSearchSlice = createSlice({\n  name: \"wordSearch\",\n  initialState,\n  reducers: {\n    setCanBend(state, action: PayloadAction<boolean>) {\n      state.canBend = action.payload;\n    },\n    setGrid(state, action: PayloadAction<string>) {\n      state.grid = action.payload;\n    },\n    setUseCardinals(state, action: PayloadAction<boolean>) {\n      state.useCardinals = action.payload;\n    },\n    setUseDiagonals(state, action: PayloadAction<boolean>) {\n      state.useDiagonals = action.payload;\n    },\n    setWordList(state, action: PayloadAction<string>) {\n      state.wordList = action.payload;\n    },\n  },\n});\n\nexport const {\n  setCanBend,\n  setGrid,\n  setUseCardinals,\n  setUseDiagonals,\n  setWordList,\n} = wordSearchSlice.actions;\n\nexport default wordSearchSlice.reducer;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NotFound_container__3okh_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"App_content__1Wt3K\"};","export default __webpack_public_path__ + \"static/media/puzztool_banner_white.0b7fbfa4.svg\";","import NavDropdown from \"react-bootstrap/NavDropdown\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { RouteCategory } from \"../../Data/RouteData\";\n\ninterface Props {\n  category: RouteCategory;\n}\n\nfunction getCategoryDropdownId(categoryName: string) {\n  return categoryName\n    .toLowerCase()\n    .replace(/[^a-z]/, \"\")\n    .concat(\"-dropdown\");\n}\n\nfunction NavbarCategory(props: Props) {\n  const name = props.category.name;\n  const rootUrl = props.category.rootUrl;\n\n  return (\n    <LinkContainer key={name} onClick={(e) => e.preventDefault()} to={rootUrl}>\n      <NavDropdown id={getCategoryDropdownId(name)} title={name}>\n        {props.category.children.map((child) => (\n          <LinkContainer key={`${name}-${child.name}`} to={rootUrl + child.url}>\n            <NavDropdown.Item eventKey={name + child.name}>\n              {child.name}\n            </NavDropdown.Item>\n          </LinkContainer>\n        ))}\n      </NavDropdown>\n    </LinkContainer>\n  );\n}\n\nexport default NavbarCategory;\n","import Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { getCategories } from \"../../Data/RouteData\";\nimport PuzztoolBannerWhite from \"../../Images/puzztool_banner_white.svg\";\nimport AppNavCategory from \"./AppNavCategory\";\nimport styles from \"./index.module.scss\";\n\nfunction AppNav() {\n  return (\n    <Navbar\n      bg=\"dark\"\n      className={styles.container}\n      collapseOnSelect={true}\n      expand=\"md\"\n      // Remove focus from the selected element to prevent it from taking\n      // further keyboard input.\n      onSelect={() => (document.activeElement as HTMLElement).blur()}\n      sticky=\"top\"\n      variant=\"dark\"\n    >\n      <LinkContainer to=\"/\">\n        <Navbar.Brand>\n          <img\n            className={styles.logo}\n            src={PuzztoolBannerWhite}\n            alt=\"PuzzTool logo\"\n          />\n        </Navbar.Brand>\n      </LinkContainer>\n      <Navbar.Toggle />\n      <Navbar.Collapse>\n        <Nav>\n          {getCategories().map((category) => (\n            <AppNavCategory key={category.name} category={category} />\n          ))}\n        </Nav>\n        <Nav>\n          <LinkContainer to=\"/help\" onClick={(e) => e.preventDefault()}>\n            <NavDropdown title=\"Help\" id=\"help-dropdown\">\n              <LinkContainer to=\"/help/settings\">\n                <NavDropdown.Item eventKey=\"Help.Settings\">\n                  Settings\n                </NavDropdown.Item>\n              </LinkContainer>\n            </NavDropdown>\n          </LinkContainer>\n          <Nav.Link\n            eventKey=\"Help.Feedback\"\n            href=\"https://github.com/puzztool/puzztool/issues/new\"\n            rel=\"noreferrer\"\n            target=\"_blank\"\n          >\n            Feedback\n          </Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default AppNav;\n","import { Link } from \"react-router-dom\";\nimport PuzzToolPage from \"../../Common/PuzzToolPage\";\nimport styles from \"./NotFound.module.scss\";\n\nfunction NotFound() {\n  return (\n    <PuzzToolPage title=\"Not Found\">\n      <p className={styles.container}>\n        If this was reached in error, use the navigation options or go{\" \"}\n        <Link to=\"/\">home</Link>.\n      </p>\n    </PuzzToolPage>\n  );\n}\n\nexport default NotFound;\n","import { LoadingComponentProps } from \"react-loadable\";\nimport styles from \"./index.module.scss\";\n\nfunction Loading(props: LoadingComponentProps) {\n  function getContent() {\n    if (props.error) {\n      return (\n        <div className={styles.content}>\n          <div className={styles.error} />\n          <div>Failed to load content</div>\n        </div>\n      );\n    } else if (props.timedOut) {\n      return (\n        <div className={styles.content}>\n          <div className={styles.error} />\n          <div>Timed out while loading content</div>\n        </div>\n      );\n    } else if (props.pastDelay) {\n      return (\n        <div className={styles.content}>\n          <div className={styles.spinner} />\n          <div>Loading</div>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  return <div>{getContent()}</div>;\n}\n\nexport default Loading;\n","import { Route, Switch } from \"react-router-dom\";\nimport Loadable from \"react-loadable\";\nimport PuzzToolDocumentTitle from \"./Common/PuzzToolDocumentTitle\";\nimport AppNav from \"./Features/AppNav\";\nimport NotFound from \"./Features/Error/NotFound\";\nimport Loading from \"./Features/Loading\";\nimport styles from \"./App.module.scss\";\n\nconst defaultTimeout = 10000;\n\nconst WordSearch = Loadable({\n  loader: () => import(\"./Features/WordSearch\"),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst AutoConvert = Loadable({\n  loader: () => import(\"./Features/Encoding/AutoConvert\"),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Autokey = Loadable({\n  loader: () => import(\"./Features/Cipher/Autokey\"),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Braille = Loadable({\n  loader: () => import(\"./Features/Encoding/Braille\"),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Caesar = Loadable({\n  loader: () => import(\"./Features/Cipher/Caesar\"),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Character = Loadable({\n  loader: () => import(\"./Features/Encoding/Character\"),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Home = Loadable({\n  loader: () => import(\"./Features/Home\"),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Morse = Loadable({\n  loader: () => import(\"./Features/Encoding/Morse\"),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Nato = Loadable({\n  loader: () => import(\"./Features/Encoding/Nato\"),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst NavalFlag = Loadable({\n  loader: () => import(\"./Features/Encoding/NavalFlag\"),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Pigpen = Loadable({\n  loader: () => import(\"./Features/Pigpen\"),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Resistor = Loadable({\n  loader: () => import(\"./Features/Resistor\"),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Semaphore = Loadable({\n  loader: () => import(\"./Features/Encoding/Semaphore\"),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Settings = Loadable({\n  loader: () => import(\"./Features/Settings\"),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nconst Vigenere = Loadable({\n  loader: () => import(\"./Features/Cipher/Vigenere\"),\n  loading: Loading,\n  timeout: defaultTimeout,\n});\n\nfunction App() {\n  return (\n    <PuzzToolDocumentTitle>\n      <div>\n        <AppNav />\n        <div className={styles.content}>\n          <Switch>\n            <Route exact={true} path=\"/\" component={Home} />\n            <Route exact={true} path=\"/cipher/autokey\" component={Autokey} />\n            <Route exact={true} path=\"/cipher/caesar\" component={Caesar} />\n            <Route exact={true} path=\"/cipher/vigenere\" component={Vigenere} />\n            <Route\n              exact={true}\n              path=\"/encoding/autoconvert\"\n              component={AutoConvert}\n            />\n            <Route exact={true} path=\"/encoding/braille\" component={Braille} />\n            <Route exact={true} path=\"/encoding/morse\" component={Morse} />\n            <Route exact={true} path=\"/encoding/pigpen\" component={Pigpen} />\n            <Route\n              exact={true}\n              path=\"/encoding/semaphore\"\n              component={Semaphore}\n            />\n            <Route exact={true} path=\"/help/settings\" component={Settings} />\n            <Route\n              exact={true}\n              path=\"/reference/characterencodings\"\n              component={Character}\n            />\n            <Route exact={true} path=\"/reference/nato\" component={Nato} />\n            <Route\n              exact={true}\n              path=\"/reference/navalflags\"\n              component={NavalFlag}\n            />\n            <Route\n              exact={true}\n              path=\"/reference/resistors\"\n              component={Resistor}\n            />\n            <Route\n              exact={true}\n              path=\"/solvers/wordsearch\"\n              component={WordSearch}\n            />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </div>\n    </PuzzToolDocumentTitle>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport autokeyCipherReducer from \"./Autokey/autokeyCipherSlice\";\nimport caesarCipherReducer from \"./Caesar/caesarCipherSlice\";\nimport vigenereCipherReducer from \"./Vigenere/vigenereCipherSlice\";\n\nexport default combineReducers({\n  autokey: autokeyCipherReducer,\n  caesar: caesarCipherReducer,\n  vigenere: vigenereCipherReducer,\n});\n","import { combineReducers } from \"redux\";\nimport autoConvertReducer from \"./AutoConvert/autoConvertSlice\";\nimport brailleEncodingReducer from \"./Braille/brailleEncodingSlice\";\nimport characterEncodingReducer from \"./Character/characterEncodingSlice\";\nimport morseEncodingReducer from \"./Morse/morseEncodingSlice\";\nimport semaphoreEncodingReducer from \"./Semaphore/semaphoreEncodingSlice\";\n\nexport default combineReducers({\n  autoConvert: autoConvertReducer,\n  braille: brailleEncodingReducer,\n  character: characterEncodingReducer,\n  morse: morseEncodingReducer,\n  semaphore: semaphoreEncodingReducer,\n});\n","import { combineReducers } from \"redux\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport cipherReducer from \"../Features/Cipher/cipherReducer\";\nimport encodingReducer from \"../Features/Encoding/encodingReducer\";\nimport resistorReducer from \"../Features/Resistor/resistorSlice\";\nimport wordSearchReducer from \"../Features/WordSearch/wordSearchSlice\";\n\nconst cipherPersistConfig = {\n  key: \"cipher\",\n  storage,\n};\n\nconst encodingPersistConfig = {\n  key: \"encoding\",\n  storage,\n};\n\nconst createRootReducer = () =>\n  combineReducers({\n    cipher: persistReducer(cipherPersistConfig, cipherReducer),\n    encoding: persistReducer(encodingPersistConfig, encodingReducer),\n    resistor: resistorReducer,\n    wordSearch: wordSearchReducer,\n  });\n\nexport type RootState = ReturnType<ReturnType<typeof createRootReducer>>;\nexport default createRootReducer;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport createRootReducer from \"./rootReducer\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst configurePuzzToolStore = () => {\n  const rootReducer = createRootReducer();\n  const persistedReducer = persistReducer(persistConfig, rootReducer);\n\n  const store = configureStore({\n    reducer: persistedReducer,\n    middleware: getDefaultMiddleware({\n      serializableCheck: {\n        // Ignore actions for \"redux-persist\"\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n  });\n\n  let persistor = persistStore(store);\n\n  return { store, persistor };\n};\n\nexport default configurePuzzToolStore;\n","import { createBrowserHistory } from \"history\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Provider } from \"react-redux\";\nimport { Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport configureStore from \"./Store/configureStore\";\nimport \"./index.scss\";\n\nconst baseUrl =\n  document.getElementsByTagName(\"base\")[0].getAttribute(\"href\") || \"\";\nconst history = createBrowserHistory({ basename: baseUrl });\nconst { store, persistor } = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <Router history={history}>\n          <App />\n        </Router>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Loading_content__21QeK\",\"error\":\"Loading_error__2QBtH\",\"spinner\":\"Loading_spinner__3RQ_C\",\"spin\":\"Loading_spin___Xl3K\"};","import { KeyedCipherStringBase } from \"puzzle-lib\";\nimport { ChangeEvent } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Card from \"react-bootstrap/Card\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\nimport { useFocusInput } from \"../../../Hooks/FocusInput\";\nimport styles from \"./index.module.scss\";\n\nexport enum Conversion {\n  encrypt,\n  decrypt,\n}\n\ninterface Props {\n  cipher: KeyedCipherStringBase;\n  conversion: Conversion;\n  id: string;\n  secret: string;\n  onClear: () => void;\n  onConversionChange: (value: Conversion) => void;\n  onSecretChange: (value: string) => void;\n  onTextChange: (value: string) => void;\n  prompt: JSX.Element | string;\n  text: string;\n}\n\nfunction KeyedCipherStream(props: Props) {\n  const inputRef = useFocusInput();\n\n  function onClearClick() {\n    props.onClear();\n  }\n\n  function onKeyChange(event: ChangeEvent<HTMLInputElement>) {\n    props.onSecretChange(event.currentTarget.value);\n  }\n\n  function onTextChange(event: ChangeEvent<HTMLInputElement>) {\n    props.onTextChange(event.currentTarget.value);\n  }\n\n  function calculateOutput() {\n    const cipher = props.cipher;\n    cipher.key = props.secret;\n    cipher.text = props.text;\n\n    switch (props.conversion) {\n      case Conversion.encrypt:\n        return cipher.encrypt();\n\n      case Conversion.decrypt:\n        return cipher.decrypt();\n\n      default:\n        throw new Error(\"Invalid conversion type\");\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <Card className={styles.input}>\n        <Card.Header>{props.prompt}</Card.Header>\n        <Card.Body>\n          <FormControl\n            onChange={onTextChange}\n            placeholder=\"Text\"\n            ref={inputRef}\n            value={props.text}\n          />\n          <FormControl\n            onChange={onKeyChange}\n            placeholder=\"Key\"\n            value={props.secret}\n          />\n          <ButtonToolbar>\n            <ToggleButtonGroup\n              name=\"KeyedCipherStream-conversion\"\n              onChange={props.onConversionChange}\n              type=\"radio\"\n              value={props.conversion}\n            >\n              <ToggleButton\n                id=\"KeyedCipherStream-conversion-encrypt\"\n                value={Conversion.encrypt}\n                variant=\"outline-primary\"\n              >\n                Encrypt\n              </ToggleButton>\n              <ToggleButton\n                id=\"KeyedCipherStream-conversion-decrypt\"\n                value={Conversion.decrypt}\n                variant=\"outline-primary\"\n              >\n                Decrypt\n              </ToggleButton>\n            </ToggleButtonGroup>\n            <ButtonGroup>\n              <Button onClick={onClearClick} variant=\"danger\">\n                Clear\n              </Button>\n            </ButtonGroup>\n          </ButtonToolbar>\n        </Card.Body>\n      </Card>\n      <Card>\n        <Card.Header>Output</Card.Header>\n        <Card.Body>\n          <pre>{calculateOutput() || \" \"}</pre>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default KeyedCipherStream;\n","import { ReactChild } from \"react\";\nimport DocumentTitle from \"react-document-title\";\n\nconst PUZZTOOL_TITLE = \"PuzzTool\";\n\ninterface Props {\n  children?: ReactChild;\n  title?: string;\n}\n\nfunction PuzzToolDocumentTitle({ children, title }: Props) {\n  function getDocumentTitle() {\n    if (title) {\n      return `${title} - ${PUZZTOOL_TITLE}`;\n    }\n\n    return PUZZTOOL_TITLE;\n  }\n\n  return <DocumentTitle title={getDocumentTitle()}>{children}</DocumentTitle>;\n}\n\nexport default PuzzToolDocumentTitle;\n"],"sourceRoot":""}