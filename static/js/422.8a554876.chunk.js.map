{"version":3,"file":"static/js/422.8a554876.chunk.js","mappings":"sQAsBA,MAlBA,SAAoBA,GAelB,OAAO,yBAbEA,EAAMC,KAAKC,KAAI,SAACC,EAAeC,GACpC,OAAc,IAAVA,EACK,MAIP,2BACGA,EAAMC,WAAWC,SAAS,GAD7B,KACmCH,IADzBC,SCXlB,EAA4B,gCAA5B,EAAoE,4BCgB9DG,EAAqB,CACzBC,MAAAA,EAAAA,GACAC,QAAAA,EAAAA,IAkDF,OA/CkBC,EAAAA,EAAAA,KARM,SAACC,GAAD,MAAuB,CAC7CC,KAAMD,EAAME,OAAOC,OAAOF,QAOeL,EA+C3C,EAzCA,SAAsBP,GACpB,IAAMe,GAAWC,EAAAA,EAAAA,KAUjB,OACE,iBAAKC,UAAWC,EAAhB,WACE,UAACC,EAAA,EAAD,CAAMF,UAAWC,EAAjB,WACE,SAACC,EAAA,SAAD,UAAcnB,EAAMoB,UACpB,UAACD,EAAA,OAAD,YACE,SAACE,EAAA,EAAD,CACEC,SAVV,SAAuBC,GACrBvB,EAAMS,QAAQc,EAAMC,cAAcrB,QAU1BsB,YAAY,OACZC,IAAKX,EACLZ,MAAOH,EAAMY,QAEf,SAACe,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,CAAQC,QArBpB,WACE9B,EAAMQ,SAoBmCuB,QAAQ,SAAvC,8BAOR,UAACZ,EAAA,EAAD,YACE,SAACA,EAAA,SAAD,sBACA,SAACA,EAAA,OAAD,WACE,SAAC,EAAD,CAAYlB,KAAM,IAAI+B,EAAAA,GAAahC,EAAMY,MAAMqB,4BC7CzD,MARA,WACE,OACE,SAACC,EAAA,EAAD,CAAcC,YANhB,kJAM+CC,MAR9B,gBAQf,UACE,SAAC,EAAD,CAAchB,OAAO","sources":["Features/Cipher/Caesar/CaesarList.tsx","webpack://puzztool/./src/Features/Cipher/Caesar/CaesarStream.module.scss?5150","Features/Cipher/Caesar/CaesarStream.tsx","Features/Cipher/Caesar/index.tsx"],"sourcesContent":["interface Props {\n  list: string[];\n}\n\nfunction CaesarList(props: Props) {\n  function renderListItems() {\n    return props.list.map((value: string, index: number) => {\n      if (index === 0) {\n        return null;\n      }\n\n      return (\n        <div key={index}>\n          {index.toString().padStart(2)}: {value}\n        </div>\n      );\n    });\n  }\n\n  return <pre>{renderListItems()}</pre>;\n}\n\nexport default CaesarList;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"CaesarStream_container__-fIg2\",\"input\":\"CaesarStream_input__aSRMd\"};","import { CaesarString } from \"puzzle-lib\";\nimport { ChangeEvent, ReactChild } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Card from \"react-bootstrap/Card\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { useFocusInput } from \"../../../Hooks/FocusInput\";\nimport { RootState } from \"../../../Store/rootReducer\";\nimport { clear, setText } from \"./caesarCipherSlice\";\nimport CaesarList from \"./CaesarList\";\nimport styles from \"./CaesarStream.module.scss\";\n\nconst mapStateToProps = (state: RootState) => ({\n  text: state.cipher.caesar.text,\n});\nconst mapDispatchToProps = {\n  clear,\n  setText,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface Props extends ConnectedProps<typeof connector> {\n  prompt: ReactChild | ReactChild[];\n}\n\nfunction CaesarStream(props: Props) {\n  const inputRef = useFocusInput();\n\n  function onClearClick() {\n    props.clear();\n  }\n\n  function onTextChanged(event: ChangeEvent<HTMLInputElement>) {\n    props.setText(event.currentTarget.value);\n  }\n\n  return (\n    <div className={styles.container}>\n      <Card className={styles.input}>\n        <Card.Header>{props.prompt}</Card.Header>\n        <Card.Body>\n          <FormControl\n            onChange={onTextChanged}\n            placeholder=\"Text\"\n            ref={inputRef}\n            value={props.text}\n          />\n          <ButtonToolbar>\n            <ButtonGroup>\n              <Button onClick={onClearClick} variant=\"danger\">\n                Clear\n              </Button>\n            </ButtonGroup>\n          </ButtonToolbar>\n        </Card.Body>\n      </Card>\n      <Card>\n        <Card.Header>Output</Card.Header>\n        <Card.Body>\n          <CaesarList list={new CaesarString(props.text).getRotations()} />\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default connector(CaesarStream);\n","import PuzzToolPage from \"../../../Common/PuzzToolPage\";\nimport CaesarStream from \"./CaesarStream\";\n\nconst PAGE_TITLE = \"Caesar Cipher\";\nconst PAGE_DESCRIPTION =\n  \"A Caesar cipher works by shifting every letter by \" +\n  \"a fixed amount. This is a simple cipher - there are only 25 different \" +\n  \"shifts for each letter.\";\n\nfunction Caesar() {\n  return (\n    <PuzzToolPage description={PAGE_DESCRIPTION} title={PAGE_TITLE}>\n      <CaesarStream prompt=\"Type in your text, and all possible shifts will be displayed.\" />\n    </PuzzToolPage>\n  );\n}\n\nexport default Caesar;\n"],"names":["props","list","map","value","index","toString","padStart","mapDispatchToProps","clear","setText","connect","state","text","cipher","caesar","inputRef","useFocusInput","className","styles","Card","prompt","FormControl","onChange","event","currentTarget","placeholder","ref","ButtonToolbar","ButtonGroup","Button","onClick","variant","CaesarString","getRotations","PuzzToolPage","description","title"],"sourceRoot":""}