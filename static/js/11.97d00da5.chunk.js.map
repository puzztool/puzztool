{"version":3,"sources":["../node_modules/react-bootstrap/esm/Table.js","Features/Encoding/Nato/index.module.scss","Features/Encoding/Nato/index.tsx"],"names":["Table","React","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","module","exports","Nato","title","styles","container","NatoData","instance","entries","map","value","character","word"],"mappings":"iQAIMA,EAAqBC,cAAiB,WAWzCC,GAAQ,IAVTC,EAUS,EAVTA,SACAC,EASS,EATTA,UACAC,EAQS,EARTA,QACAC,EAOS,EAPTA,SACAC,EAMS,EANTA,WACAC,EAKS,EALTA,MACAC,EAIS,EAJTA,KACAC,EAGS,EAHTA,QACAC,EAES,EAFTA,WACGC,EACM,iBACHC,EAAoBC,YAAmBX,EAAU,SACjDY,EAAUC,IAAWZ,EAAWS,EAAmBH,GAAW,GAAJ,OAAOG,EAAP,YAA4BH,GAAWD,GAAQ,GAAJ,OAAOI,EAAP,YAA4BJ,GAAQJ,GAAW,GAAJ,OAAOQ,EAAP,YAAoCP,GAAY,GAAJ,OAAOO,EAAP,aAAqCN,GAAc,GAAJ,OAAOM,EAAP,eAAuCL,GAAS,GAAJ,OAAOK,EAAP,WAEvRI,EAAqBC,cAAK,QAAD,YAAC,eAAcN,GAAf,IAC7BR,UAAWW,EACXb,IAAKA,KAGP,GAAIS,EAAY,CACd,IAAIQ,EAAkB,GAAH,OAAMN,EAAN,eAMnB,MAJ0B,kBAAfF,IACTQ,EAAkB,GAAH,OAAMA,EAAN,YAAyBR,IAGtBO,cAAK,MAAO,CAC9Bd,UAAWe,EACXC,SAAUH,IAId,OAAOA,KAEMjB,O,oBCtCfqB,EAAOC,QAAU,CAAC,UAAY,0B,iCCD9B,8DA8BeC,UAzBf,WACE,OACE,cAAC,IAAD,CAAcC,MAAM,gBAApB,SACE,qBAAKpB,UAAWqB,IAAOC,UAAvB,SACE,eAAC,IAAD,CAAOrB,SAAS,EAAMM,YAAY,EAAlC,UACE,gCACE,+BACE,wCACA,gDAGJ,gCACGgB,WAASC,SAASC,QAAQC,KAAI,SAACC,GAAD,OAC7B,+BACE,6BAAKA,EAAMC,YACX,6BAAKD,EAAME,SAFJF,EAAMC","file":"static/js/11.97d00da5.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Nato_container__2S7nA\"};","import Table from \"react-bootstrap/Table\";\nimport { NatoData } from \"puzzle-lib\";\nimport PuzzToolPage from \"../../../Common/PuzzToolPage\";\nimport styles from \"./index.module.scss\";\n\nfunction Nato() {\n  return (\n    <PuzzToolPage title=\"NATO Alphabet\">\n      <div className={styles.container}>\n        <Table striped={true} responsive={true}>\n          <thead>\n            <tr>\n              <th>Letter</th>\n              <th>NATO Word</th>\n            </tr>\n          </thead>\n          <tbody>\n            {NatoData.instance.entries.map((value) => (\n              <tr key={value.character}>\n                <td>{value.character}</td>\n                <td>{value.word}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </div>\n    </PuzzToolPage>\n  );\n}\n\nexport default Nato;\n"],"sourceRoot":""}