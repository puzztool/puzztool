{"version":3,"sources":["../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/react-bootstrap/esm/Table.js","../node_modules/react-bootstrap/esm/Tabs.js","../node_modules/react-bootstrap/esm/Tab.js","Features/Encoding/Morse/MorsePicture.tsx","Features/Encoding/Morse/MorseStream.tsx","Features/Encoding/Morse/MorseTable.tsx","Features/Encoding/Morse/index.tsx"],"names":["TabContainer","props","useUncontrolled","activeKey","id","generateCustomChildId","generateChildId","onSelect","transition","mountOnEnter","unmountOnExit","children","useMemo","key","type","tabContext","getControlledId","getControllerId","_jsx","TabContext","Provider","value","SelectableContext","createWithBsPrefix","TabPane","React","ref","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","Fade","useTabContext","bsPrefix","className","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","as","Component","prefix","useBootstrapPrefix","pane","role","classNames","in","displayName","fadeStyles","ENTERING","ENTERED","handleEnter","useCallback","node","triggerBrowserReflow","TransitionWrapper","addEndListener","transitionEndListener","childRef","status","innerProps","defaultProps","timeout","appear","Table","striped","bordered","borderless","hover","size","variant","responsive","decoratedBsPrefix","classes","table","responsiveClass","renderTab","child","title","disabled","tabClassName","NavItem","NavLink","Tabs","defaultActiveKey","forEach","getDefaultActiveKey","controlledProps","_jsxs","Nav","map","TabContent","childProps","propTypes","PropTypes","oneOfType","string","number","isRequired","bool","Tab","Error","Object","assign","Container","Content","Pane","renderDot","viewBox","cx","cy","r","renderDash","width","height","MorsePicture","Array","from","morseString","index","mapDispatchToProps","append","backspace","clear","connector","connect","state","stream","encoding","morse","onDotClick","Character","DOT","onDashClick","DASH","onNextClick","length","lastCharacter","slice","MorseString","CHARACTER_DIVIDER","WORD_DIVIDER","useEffect","onKeyDown","ev","defaultPrevented","handled","keyCode","preventDefault","onKeyPress","document","addEventListener","removeEventListener","Card","Header","Body","replace","toString","invertDotsAndDashes","reverse","ButtonToolbar","ButtonGroup","Button","onClick","MorseTable","characters","getPotentialMatches","entry","display","toMorseString","selectTab","selectedTab","PuzzToolPage"],"mappings":"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","file":"static/js/5.08415853.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst TabContainer = props => {\n  const {\n    id,\n    generateChildId: generateCustomChildId,\n    onSelect,\n    activeKey,\n    transition,\n    mountOnEnter,\n    unmountOnExit,\n    children\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const generateChildId = useMemo(() => generateCustomChildId || ((key, type) => id ? `${id}-${type}-${key}` : null), [id, generateCustomChildId]);\n  const tabContext = useMemo(() => ({\n    onSelect,\n    activeKey,\n    transition,\n    mountOnEnter: mountOnEnter || false,\n    unmountOnExit: unmountOnExit || false,\n    getControlledId: key => generateChildId(key, 'tabpane'),\n    getControllerId: key => generateChildId(key, 'tab')\n  }), [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/_jsx(TabContext.Provider, {\n    value: tabContext,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: onSelect || null,\n      children: children\n    })\n  });\n};\n\nexport default TabContainer;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('tab-content');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useTabContext(props) {\n  const context = useContext(TabContext);\n  if (!context) return props;\n  const {\n    activeKey,\n    getControlledId,\n    getControllerId,\n    ...rest\n  } = context;\n  const shouldTransition = props.transition !== false && rest.transition !== false;\n  const key = makeEventKey(props.eventKey);\n  return { ...props,\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  };\n}\n\nconst TabPane = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    bsPrefix,\n    className,\n    active,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited,\n    mountOnEnter,\n    unmountOnExit,\n    transition: Transition,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    eventKey: _,\n    ...rest\n  } = useTabContext(props);\n  const prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n\n  let pane = /*#__PURE__*/_jsx(Component, { ...rest,\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active\n    })\n  });\n\n  if (Transition) pane = /*#__PURE__*/_jsx(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    children: pane\n  }); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/_jsx(TabContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: null,\n      children: pane\n    })\n  });\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  ...props\n}, ref) => {\n  const handleEnter = useCallback(node => {\n    triggerBrowserReflow(node);\n    props.onEnter == null ? void 0 : props.onEnter(node);\n  }, [props]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status])\n    })\n  });\n});\nFade.defaultProps = defaultProps;\nFade.displayName = 'Fade';\nexport default Fade;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import * as React from 'react';\nimport requiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport { useUncontrolled } from 'uncontrollable';\nimport Nav from './Nav';\nimport NavLink from './NavLink';\nimport NavItem from './NavItem';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\nimport { forEach, map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'tabs',\n  mountOnEnter: false,\n  unmountOnExit: false\n};\n\nfunction getDefaultActiveKey(children) {\n  let defaultActiveKey;\n  forEach(children, child => {\n    if (defaultActiveKey == null) {\n      defaultActiveKey = child.props.eventKey;\n    }\n  });\n  return defaultActiveKey;\n}\n\nfunction renderTab(child) {\n  const {\n    title,\n    eventKey,\n    disabled,\n    tabClassName,\n    id\n  } = child.props;\n\n  if (title == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(NavItem, {\n    as: \"li\",\n    role: \"presentation\",\n    children: /*#__PURE__*/_jsx(NavLink, {\n      as: \"button\",\n      type: \"button\",\n      eventKey: eventKey,\n      disabled: disabled,\n      id: id,\n      className: tabClassName,\n      children: title\n    })\n  });\n}\n\nconst Tabs = props => {\n  const {\n    id,\n    onSelect,\n    transition,\n    mountOnEnter,\n    unmountOnExit,\n    children,\n    activeKey = getDefaultActiveKey(children),\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  return /*#__PURE__*/_jsxs(TabContainer, {\n    id: id,\n    activeKey: activeKey,\n    onSelect: onSelect,\n    transition: transition,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    children: [/*#__PURE__*/_jsx(Nav, { ...controlledProps,\n      role: \"tablist\",\n      as: \"ul\",\n      children: map(children, renderTab)\n    }), /*#__PURE__*/_jsx(TabContent, {\n      children: map(children, child => {\n        const childProps = { ...child.props\n        };\n        delete childProps.title;\n        delete childProps.disabled;\n        delete childProps.tabClassName;\n        return /*#__PURE__*/_jsx(TabPane, { ...childProps\n        });\n      })\n    })]\n  });\n};\n\nTabs.defaultProps = defaultProps;\nTabs.displayName = 'Tabs';\nexport default Tabs;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/* eslint-disable react/no-unused-prop-types */\nconst propTypes = {\n  eventKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Content for the tab title.\n   */\n  title: PropTypes.node.isRequired,\n\n  /**\n   * The disabled state of the tab.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Class to pass to the underlying nav link.\n   */\n  tabClassName: PropTypes.string\n};\n\nconst Tab = () => {\n  throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly'); // Needed otherwise docs error out.\n\n  return /*#__PURE__*/_jsx(_Fragment, {});\n};\n\nTab.propTypes = propTypes;\nexport default Object.assign(Tab, {\n  Container: TabContainer,\n  Content: TabContent,\n  Pane: TabPane\n});","\ninterface Props {\n  morseString: string;\n}\n\nexport function renderDot() {\n  return (\n    <svg className=\"MorsePicture-dotIcon\" viewBox=\"0 0 30 30\">\n      <circle cx=\"15\" cy=\"15\" r=\"15\" />\n      Sorry, your browser does not support inline SVG.\n    </svg>\n  );\n}\n\nexport function renderDash() {\n  return (\n    <svg className=\"MorsePicture-dashIcon\" viewBox=\"0 0 90 30\">\n      <rect width=\"90\" height=\"30\" />\n      Sorry, your browser does not support inline SVG.\n    </svg>\n  );\n}\n\nfunction MorsePicture(props: Props) {\n  return (\n    <>\n      {Array.from(props.morseString)\n        .map((value: string, index: number) => (\n          <span key={index}>\n            {value === '.' ? renderDot() : renderDash()}\n          </span>\n        ))}\n    </>\n  );\n}\n\nexport default MorsePicture;","import { MorseCharacter as Character, MorseString } from 'puzzle-lib';\nimport React, { useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport Card from 'react-bootstrap/Card';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { RootState } from '../../../Store/rootReducer';\nimport { append, backspace, clear } from './morseEncodingSlice';\nimport { renderDot, renderDash } from './MorsePicture';\nimport './MorseStream.scss';\n\nconst mapStateToProps = (state: RootState) => ({\n  stream: state.encoding.morse.stream,\n});\nconst mapDispatchToProps = {\n  append,\n  backspace,\n  clear,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface Props extends ConnectedProps<typeof connector> { }\n\nfunction MorseStream(props: Props) {\n  useEffect(\n    () => {\n      function onKeyDown(ev: KeyboardEvent) {\n        if (ev.defaultPrevented) {\n          return;\n        }\n\n        let handled = false;\n\n        // Chrome won't trigger keypress for any keys that can invoke browser\n        // actions.\n        if ((ev.key === 'Backspace') || (ev.keyCode === 8)) { // Backspace\n          props.backspace();\n          handled = true;\n        }\n\n        if (handled) {\n          ev.preventDefault();\n        }\n      }\n\n      function onKeyPress(ev: KeyboardEvent) {\n        if (ev.defaultPrevented) {\n          return;\n        }\n\n        let handled = true;\n        if (ev.key) {\n          switch (ev.key) {\n            case '-':\n            case 'j':\n              onDashClick();\n              break;\n            case '.':\n            case 'k':\n              onDotClick();\n              break;\n            case 'Enter':\n            case ' ':\n            case 'l':\n              onNextClick();\n              break;\n            case ';':\n              props.backspace();\n              break;\n            default:\n              handled = false;\n          }\n        } else {\n          // Older browsers such as Edge don't support ev.key\n          switch (ev.keyCode) {\n            case 45: // '-'\n            case 106: // 'J'\n              onDashClick();\n              break;\n            case 46: // '.'\n            case 107: // 'K'\n              onDotClick();\n              break;\n            case 13: // Enter\n            case 32: // Space\n            case 108: // 'L'\n              onNextClick();\n              break;\n            case 59: // ';'\n              props.backspace();\n              break;\n            default:\n              handled = false;\n          }\n        }\n\n        if (handled) {\n          ev.preventDefault();\n        }\n      }\n\n      document.addEventListener('keydown', onKeyDown);\n      document.addEventListener('keypress', onKeyPress);\n\n      return () => {\n        document.removeEventListener('keydown', onKeyDown);\n        document.removeEventListener('keypress', onKeyPress);\n      };\n    });\n\n  function codeText(): string {\n    // Replace dot with interpunct for readability\n    // Replace dash with full width hyphen for readability.  Don't use emdash\n    // because multiple emdashes get combined with no space between them.\n    return props.stream.replace(/\\./g, '\\u00b7').replace(/-/g, '\\uff0d');\n  }\n\n  function plainText(): string {\n    return new MorseString(props.stream).toString();\n  }\n\n  function invertText(): string {\n    return new MorseString(props.stream).invertDotsAndDashes().toString();\n  }\n\n  function reverseText(): string {\n    return new MorseString(props.stream).reverse().toString();\n  }\n\n  function invertReverseText(): string {\n    return new MorseString(props.stream)\n      .invertDotsAndDashes()\n      .reverse()\n      .toString();\n  }\n\n  function onBackspaceClick() {\n    props.backspace();\n  }\n\n  function onClearClick() {\n    props.clear();\n  }\n\n  function onDotClick() {\n    props.append(Character.DOT);\n  }\n\n  function onDashClick() {\n    props.append(Character.DASH);\n  }\n\n  function onNextClick() {\n    if (props.stream.length > 0) {\n      const lastCharacter = props.stream.slice(-1);\n      if (lastCharacter === MorseString.CHARACTER_DIVIDER) {\n        // Pressing next twice starts a new word\n        props.backspace();\n        props.append(MorseString.WORD_DIVIDER);\n      } else if (lastCharacter !== MorseString.WORD_DIVIDER) {\n        props.append(MorseString.CHARACTER_DIVIDER);\n      }\n    }\n  }\n\n  return (\n    <div className=\"MorseStream\">\n      <Card className=\"MorseStream-morse-output\">\n        <Card.Header>Input</Card.Header>\n        <Card.Body>\n          <pre>\n            {codeText()}<span className=\"blinking-cursor\">|</span>\n          </pre>\n        </Card.Body>\n      </Card>\n      <Card className=\"MorseStream-output\">\n        <Card.Header>Plaintext</Card.Header>\n        <Card.Body>\n          <pre>\n            {plainText() || ' '}\n          </pre>\n        </Card.Body>\n      </Card>\n      <Card className=\"MorseStream-output\">\n        <Card.Header>Swap Dots/Dashes</Card.Header>\n        <Card.Body>\n          <pre>\n            {invertText() || ' '}\n          </pre>\n        </Card.Body>\n      </Card>\n      <Card className=\"MorseStream-output\">\n        <Card.Header>Right to Left</Card.Header>\n        <Card.Body>\n          <pre>\n            {reverseText() || ' '}\n          </pre>\n        </Card.Body>\n      </Card>\n      <Card className=\"MorseStream-output\">\n        <Card.Header>Right to Left + Swap Dots/Dashes</Card.Header>\n        <Card.Body>\n          <pre>\n            {invertReverseText() || ' '}\n          </pre>\n        </Card.Body>\n      </Card>\n      <ButtonToolbar className=\"MorseStream-inputCommands\">\n        <ButtonGroup>\n          <Button\n            onClick={onDotClick}\n            variant=\"primary\"\n          >\n            {renderDot()}\n          </Button>\n        </ButtonGroup>\n        <ButtonGroup>\n          <Button\n            onClick={onDashClick}\n            variant=\"primary\"\n          >\n            {renderDash()}\n          </Button>\n        </ButtonGroup>\n      </ButtonToolbar>\n      <ButtonToolbar className=\"MorseStream-commands\">\n        <ButtonGroup>\n          <Button onClick={onBackspaceClick}>&#x232b;</Button>\n        </ButtonGroup>\n        <ButtonGroup>\n          <Button onClick={onNextClick}>Next</Button>\n        </ButtonGroup>\n        <ButtonGroup>\n          <Button\n            onClick={onClearClick}\n            variant=\"danger\"\n          >\n            Clear\n          </Button>\n        </ButtonGroup>\n      </ButtonToolbar>\n    </div>\n  );\n}\n\nexport default connector(MorseStream);\n","import { MorseCharacter as Character } from 'puzzle-lib';\nimport Table from 'react-bootstrap/Table';\nimport MorsePicture from './MorsePicture';\nimport './MorseTable.scss';\n\nfunction MorseTable() {\n  const characters = new Character().getPotentialMatches();\n  return (\n    <div className=\"MorseTable\">\n      <Table striped={true} responsive={true}>\n        <thead>\n          <tr>\n            <th>Character</th>\n            <th>Morse</th>\n          </tr>\n        </thead>\n        <tbody>\n          {characters.map((entry) => (\n            <tr key={entry.display}>\n              <td>{entry.display}</td>\n              <td>\n                <div className=\"MorseTable-morseView\">\n                  <MorsePicture morseString={Character.toMorseString(entry.encoding)} />\n                </div>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n\nexport default MorseTable;\n","import Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport { connect, ConnectedProps } from 'react-redux';\nimport PuzzToolPage from '../../../Common/PuzzToolPage';\nimport { RootState } from '../../../Store/rootReducer';\nimport { selectTab } from './morseEncodingSlice';\nimport MorseStream from './MorseStream';\nimport MorseTable from './MorseTable';\nimport './index.scss';\n\nconst mapStateToProps = (state: RootState) => ({\n  selectedTab: state.encoding.morse.selectedTab,\n});\nconst mapDispatchToProps = {\n  selectTab,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface Props extends ConnectedProps<typeof connector> { }\n\nfunction Morse(props: Props) {\n  return (\n    <PuzzToolPage title=\"Morse Code\">\n      <Tabs\n        activeKey={props.selectedTab}\n        id=\"Morse-tabs\"\n        onSelect={props.selectTab}\n      >\n        <Tab className=\"Morse-tab-value\" eventKey=\"1\" title=\"Value\">\n          <MorseStream />\n        </Tab>\n        <Tab eventKey=\"2\" title=\"Reference\">\n          <MorseTable />\n        </Tab>\n      </Tabs>\n    </PuzzToolPage>\n  );\n}\n\nexport default connector(Morse);\n"],"sourceRoot":""}