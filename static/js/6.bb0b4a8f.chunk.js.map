{"version":3,"sources":["../node_modules/react-bootstrap/esm/types.js","../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/react-bootstrap/esm/Table.js","../node_modules/react-bootstrap/esm/Tabs.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/react-bootstrap/esm/DropdownButton.js","Features/Resistor/ResistorColorSelector.tsx","Features/Resistor/ResistorPicture.tsx","Features/Resistor/ResistorInput.tsx","Common/Helpers.ts","Features/Resistor/ResistorTable.tsx","Features/Resistor/index.tsx"],"names":["alignDirection","PropTypes","oneOf","alignPropType","oneOfType","shape","sm","md","lg","xl","xxl","TabContainer","props","useUncontrolled","activeKey","id","generateCustomChildId","generateChildId","onSelect","transition","mountOnEnter","unmountOnExit","children","useMemo","key","type","tabContext","getControlledId","getControllerId","_jsx","TabContext","Provider","value","SelectableContext","createWithBsPrefix","TabPane","React","ref","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","Fade","useTabContext","bsPrefix","className","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","as","Component","prefix","useBootstrapPrefix","pane","role","classNames","in","displayName","fadeStyles","ENTERING","ENTERED","handleEnter","useCallback","node","triggerBrowserReflow","TransitionWrapper","addEndListener","transitionEndListener","childRef","status","innerProps","defaultProps","timeout","appear","Table","striped","bordered","borderless","hover","size","variant","responsive","decoratedBsPrefix","classes","table","responsiveClass","renderTab","child","title","disabled","tabClassName","NavItem","NavLink","Tabs","defaultActiveKey","forEach","getDefaultActiveKey","controlledProps","_jsxs","Nav","map","TabContent","childProps","propTypes","string","number","isRequired","bool","Tab","Error","Object","assign","Container","Content","Pane","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","any","href","onClick","func","align","menuRole","renderMenuOnMount","rootCloseEvent","menuVariant","DropdownButton","Dropdown","DropdownToggle","childBsPrefix","DropdownMenu","renderOnMount","ResistorColorSelector","index","handler","onChange","name","Resistor","colorTable","color","colorByName","colors","itemIndex","Item","ResistorPicture","getBandOffset","bands","renderBand","band","xlinkHref","x","fill","colorCode","width","viewBox","y","height","rx","ry","stroke","strokeWidth","mapDispatchToProps","setBand","getResistorValue","slice","filter","getValue","INVALID_RESISTOR","getDisplayValue","toleranceInPercent","connector","connect","state","resistor","onColorChange","bandIndex","colorIndex","indexOf","colorsWithValue","hasValue","colorsWithTolerance","hasTolerance","Card","Header","Body","ButtonToolbar","ButtonGroup","Color","getContrastingColor","background","hexCode","substring","parseInt","cellColorStyle","backgroundColor","ResistorTable","style","multiplier","selectTab","selectedTab","PuzzToolPage"],"mappings":"sGAAA,sDACMA,EAAiBC,IAAUC,MAAM,CAAC,QAAS,QACpCC,EAAgBF,IAAUG,UAAU,CAACJ,EAAgBC,IAAUI,MAAM,CAChFC,GAAIN,IACFC,IAAUI,MAAM,CAClBE,GAAIP,IACFC,IAAUI,MAAM,CAClBG,GAAIR,IACFC,IAAUI,MAAM,CAClBI,GAAIT,IACFC,IAAUI,MAAM,CAClBK,IAAKV,O,iCCXP,0CAuCeW,IAhCM,SAAAC,GACnB,MASIC,YAAgBD,EAAO,CACzBE,UAAW,aATXC,EADF,EACEA,GACiBC,EAFnB,EAEEC,gBACAC,EAHF,EAGEA,SACAJ,EAJF,EAIEA,UACAK,EALF,EAKEA,WACAC,EANF,EAMEA,aACAC,EAPF,EAOEA,cACAC,EARF,EAQEA,SAIIL,EAAkBM,mBAAQ,kBAAMP,GAA0B,SAACQ,EAAKC,GAAN,OAAeV,EAAK,GAAH,OAAMA,EAAN,YAAYU,EAAZ,YAAoBD,GAAQ,QAAO,CAACT,EAAIC,IACnHU,EAAaH,mBAAQ,iBAAO,CAChCL,WACAJ,YACAK,aACAC,aAAcA,IAAgB,EAC9BC,cAAeA,IAAiB,EAChCM,gBAAiB,SAAAH,GAAG,OAAIP,EAAgBO,EAAK,YAC7CI,gBAAiB,SAAAJ,GAAG,OAAIP,EAAgBO,EAAK,WAC3C,CAACN,EAAUJ,EAAWK,EAAYC,EAAcC,EAAeJ,IACnE,OAAoBY,cAAKC,IAAWC,SAAU,CAC5CC,MAAON,EACPJ,SAAuBO,cAAKI,IAAkBF,SAAU,CACtDC,MAAOd,GAAY,KACnBI,SAAUA,Q,iCClChB,YACeY,gBAAmB,gB,wUC6BlC,IAAMC,EAAuBC,cAAiB,SAACxB,EAAOyB,GACpD,MAtBF,SAAuBzB,GACrB,IAAM0B,EAAUC,qBAAWT,KAC3B,IAAKQ,EAAS,OAAO1B,EACrB,IACEE,EAIEwB,EAJFxB,UACAa,EAGEW,EAHFX,gBACAC,EAEEU,EAFFV,gBACGY,EAJL,YAKIF,EALJ,GAMMG,GAAwC,IAArB7B,EAAMO,aAA4C,IAApBqB,EAAKrB,WACtDK,EAAMkB,YAAa9B,EAAM+B,UAC/B,kCAAY/B,GAAZ,IACEgC,OAAwB,MAAhBhC,EAAMgC,QAAyB,MAAPpB,EAAckB,YAAa5B,KAAeU,EAAMZ,EAAMgC,OACtF7B,GAAIY,EAAgBf,EAAM+B,UAC1B,kBAAmBf,EAAgBhB,EAAM+B,UACzCxB,WAAYsB,IAAqB7B,EAAMO,YAAcqB,EAAKrB,YAAc0B,KACxEzB,aAAoC,MAAtBR,EAAMQ,aAAuBR,EAAMQ,aAAeoB,EAAKpB,aACrEC,cAAsC,MAAvBT,EAAMS,cAAwBT,EAAMS,cAAgBmB,EAAKnB,gBAsBtEyB,CAAclC,GAhBhBmC,EADF,EACEA,SACAC,EAFF,EAEEA,UACAJ,EAHF,EAGEA,OACAK,EAJF,EAIEA,QACAC,EALF,EAKEA,WACAC,EANF,EAMEA,UACAC,EAPF,EAOEA,OACAC,EARF,EAQEA,UACAC,EATF,EASEA,SACAlC,EAVF,EAUEA,aACAC,EAXF,EAWEA,cACYkC,EAZd,EAYEpC,WAZF,IAcEqC,GAAIC,OAdN,MAckB,MAdlB,EAgBKjB,GAhBL,EAeEG,SAfF,kBAkBMe,EAASC,YAAmBZ,EAAU,YAC5C,IAAKH,IAAWW,GAAclC,EAAe,OAAO,KAEpD,IAAIuC,EAAoB/B,cAAK4B,EAAD,YAAC,eAAgBjB,GAAjB,IAC1BH,IAAKA,EACLwB,KAAM,WACN,eAAgBjB,EAChBI,UAAWc,IAAWd,EAAWU,EAAQ,CACvCd,cAkBJ,OAdIW,IAAYK,EAAoB/B,cAAK0B,EAAY,CACnDQ,GAAInB,EACJK,QAASA,EACTC,WAAYA,EACZC,UAAWA,EACXC,OAAQA,EACRC,UAAWA,EACXC,SAAUA,EACVlC,aAAcA,EACdC,cAAeA,EACfC,SAAUsC,KAIQ/B,cAAKC,IAAWC,SAAU,CAC5CC,MAAO,KACPV,SAAuBO,cAAKI,IAAkBF,SAAU,CACtDC,MAAO,KACPV,SAAUsC,SAIhBzB,EAAQ6B,YAAc,UACP7B,O,sJCrET8B,GAAU,mBACbC,IAAW,QADE,cAEbC,IAAU,QAFG,GAIVtB,EAAoBT,cAAiB,WAIxCC,GAAQ,IAHTW,EAGS,EAHTA,UACA1B,EAES,EAFTA,SACGV,EACM,iBACHwD,EAAcC,uBAAY,SAAAC,GAC9BC,YAAqBD,GACJ,MAAjB1D,EAAMqC,SAA2BrC,EAAMqC,QAAQqB,KAC9C,CAAC1D,IACJ,OAAoBiB,cAAK2C,IAAD,YAAC,aACvBnC,IAAKA,EACLoC,eAAgBC,KACb9D,GAHmB,IAItBqC,QAASmB,EACTO,SAAUrD,EAASe,IACnBf,SAAU,SAACsD,EAAQC,GAAT,OAAqCzC,eAAmBd,EAAnB,2BAAkCuD,GAAlC,IAC7C7B,UAAWc,IAAW,OAAQd,EAAW1B,EAASV,MAAMoC,UAAWiB,EAAWW,cAIpF/B,EAAKiC,aA/BgB,CACnBf,IAAI,EACJgB,QAAS,IACT3D,cAAc,EACdC,eAAe,EACf2D,QAAQ,GA2BVnC,EAAKmB,YAAc,OACJnB,O,2LCrCToC,EAAqB7C,cAAiB,WAWzCC,GAAQ,IAVTU,EAUS,EAVTA,SACAC,EASS,EATTA,UACAkC,EAQS,EARTA,QACAC,EAOS,EAPTA,SACAC,EAMS,EANTA,WACAC,EAKS,EALTA,MACAC,EAIS,EAJTA,KACAC,EAGS,EAHTA,QACAC,EAES,EAFTA,WACG5E,EACM,iBACH6E,EAAoB9B,YAAmBZ,EAAU,SACjD2C,EAAU5B,IAAWd,EAAWyC,EAAmBF,GAAW,GAAJ,OAAOE,EAAP,YAA4BF,GAAWD,GAAQ,GAAJ,OAAOG,EAAP,YAA4BH,GAAQJ,GAAW,GAAJ,OAAOO,EAAP,YAAoCN,GAAY,GAAJ,OAAOM,EAAP,aAAqCL,GAAc,GAAJ,OAAOK,EAAP,eAAuCJ,GAAS,GAAJ,OAAOI,EAAP,WAEvRE,EAAqB9D,cAAK,QAAD,YAAC,eAAcjB,GAAf,IAC7BoC,UAAW0C,EACXrD,IAAKA,KAGP,GAAImD,EAAY,CACd,IAAII,EAAkB,GAAH,OAAMH,EAAN,eAMnB,MAJ0B,kBAAfD,IACTI,EAAkB,GAAH,OAAMA,EAAN,YAAyBJ,IAGtB3D,cAAK,MAAO,CAC9BmB,UAAW4C,EACXtE,SAAUqE,IAId,OAAOA,KAEMV,O,kOCXf,SAASY,EAAUC,GACjB,MAMIA,EAAMlF,MALRmF,EADF,EACEA,MACApD,EAFF,EAEEA,SACAqD,EAHF,EAGEA,SACAC,EAJF,EAIEA,aACAlF,EALF,EAKEA,GAGF,OAAa,MAATgF,EACK,KAGWlE,cAAKqE,IAAS,CAChC1C,GAAI,KACJK,KAAM,eACNvC,SAAuBO,cAAKsE,IAAS,CACnC3C,GAAI,SACJ/B,KAAM,SACNkB,SAAUA,EACVqD,SAAUA,EACVjF,GAAIA,EACJiC,UAAWiD,EACX3E,SAAUyE,MAKhB,IAAMK,EAAO,SAAAxF,GACX,MASIC,YAAgBD,EAAO,CACzBE,UAAW,aATXC,EADF,EACEA,GACAG,EAFF,EAEEA,SACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,aACAC,EALF,EAKEA,cACAC,EANF,EAMEA,SANF,IAOER,iBAPF,MAvCF,SAA6BQ,GAC3B,IAAI+E,EAMJ,OALAC,YAAQhF,GAAU,SAAAwE,GACQ,MAApBO,IACFA,EAAmBP,EAAMlF,MAAM+B,aAG5B0D,EAuCOE,CAAoBjF,GAPlC,EAQKkF,EARL,iBAYA,OAAoBC,eAAM9F,IAAc,CACtCI,GAAIA,EACJD,UAAWA,EACXI,SAAUA,EACVC,WAAYA,EACZC,aAAcA,EACdC,cAAeA,EACfC,SAAU,CAAcO,cAAK6E,IAAD,YAAC,eAAUF,GAAX,IAC1B3C,KAAM,UACNL,GAAI,KACJlC,SAAUqF,YAAIrF,EAAUuE,MACThE,cAAK+E,IAAY,CAChCtF,SAAUqF,YAAIrF,GAAU,SAAAwE,GACtB,IAAMe,EAAa,eAAKf,EAAMlF,OAK9B,cAHOiG,EAAWd,aACXc,EAAWb,gBACXa,EAAWZ,aACEpE,cAAKM,IAAD,eAAe0E,aAO/CT,EAAKtB,aAlFgB,CACnBS,QAAS,OACTnE,cAAc,EACdC,eAAe,GAgFjB+E,EAAKpC,YAAc,OACJoC,O,iCChGf,sDASMU,GATN,KASkB,CAChBnE,SAAU1C,IAAUG,UAAU,CAACH,IAAU8G,OAAQ9G,IAAU+G,SAK3DjB,MAAO9F,IAAUqE,KAAK2C,WAKtBjB,SAAU/F,IAAUiH,KAKpBjB,aAAchG,IAAU8G,SAGpBI,EAAM,WACV,MAAM,IAAIC,MAAM,gOAKlBD,EAAIL,UAAYA,EACDO,WAAOC,OAAOH,EAAK,CAChCI,UAAW5G,IACX6G,QAASZ,IACTa,KAAMtF,O,iCCtCR,8CACe,SAASuF,EAA2BC,EAAGC,GACpD,IAAIC,EAEJ,GAAsB,qBAAXC,QAAgD,MAAtBH,EAAEG,OAAOC,UAAmB,CAC/D,GAAIC,MAAMC,QAAQN,KAAOE,EAAK,YAA2BF,KAAOC,GAAkBD,GAAyB,kBAAbA,EAAEO,OAAqB,CAC/GL,IAAIF,EAAIE,GACZ,IAAIM,EAAI,EAEJC,EAAI,aAER,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAIH,GAAKR,EAAEO,OAAe,CACxBK,MAAM,GAED,CACLA,MAAM,EACNvG,MAAO2F,EAAEQ,OAGbK,EAAG,SAAWC,GACZ,MAAMA,GAERC,EAAGN,GAIP,MAAM,IAAIO,UAAU,yIAGtB,IAEIC,EAFAC,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLT,EAAG,WACDR,EAAKF,EAAEG,OAAOC,aAEhBO,EAAG,WACD,IAAIS,EAAOlB,EAAGmB,OAEd,OADAH,EAAmBE,EAAKR,KACjBQ,GAETP,EAAG,SAAWS,GACZH,GAAS,EACTF,EAAMK,GAERP,EAAG,WACD,IACOG,GAAoC,MAAhBhB,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIiB,EAAQ,MAAMF,O,mYC5CpB9B,EAAY,CAMhB/F,GAAId,IAAUiJ,IAGdC,KAAMlJ,IAAU8G,OAGhBqC,QAASnJ,IAAUoJ,KAGnBtD,MAAO9F,IAAUqE,KAAK2C,WAGtBjB,SAAU/F,IAAUiH,KASpBoC,MAAOnJ,IAGPoJ,SAAUtJ,IAAU8G,OAGpByC,kBAAmBvJ,IAAUiH,KAO7BuC,eAAgBxJ,IAAU8G,OAO1B2C,YAAazJ,IAAUC,MAAM,CAAC,SAG9B6C,SAAU9C,IAAU8G,OAGpBxB,QAAStF,IAAU8G,OAGnBzB,KAAMrF,IAAU8G,QAYZ4C,EAA8BvH,cAAiB,WAclDC,GAdkD,IACnD0D,EADmD,EACnDA,MACAzE,EAFmD,EAEnDA,SACAyB,EAHmD,EAGnDA,SACA0G,EAJmD,EAInDA,eACAlE,EALmD,EAKnDA,QACAD,EANmD,EAMnDA,KACAiE,EAPmD,EAOnDA,SACAC,EARmD,EAQnDA,kBACAxD,EATmD,EASnDA,SACAmD,EAVmD,EAUnDA,KACApI,EAXmD,EAWnDA,GACA2I,EAZmD,EAYnDA,YACG9I,EAbgD,wBAc7B6F,eAAMmD,IAAD,YAAC,aAC5BvH,IAAKA,GACFzB,GAFwB,IAG3BU,SAAU,CAAcO,cAAKgI,IAAgB,CAC3C9I,GAAIA,EACJoI,KAAMA,EACN7D,KAAMA,EACNC,QAASA,EACTS,SAAUA,EACV8D,cAAe/G,EACfzB,SAAUyE,IACKlE,cAAKkI,IAAc,CAClClG,KAAM0F,EACNS,cAAeR,EACfC,eAAgBA,EAChBlE,QAASmE,EACTpI,SAAUA,WAGdqI,EAAe3F,YAAc,iBAC7B2F,EAAe7C,UAAYA,EACZ6C,QChEAM,MA1Bf,SAA+BrJ,GAQ7B,OACE,cAAC,EAAD,CACEmF,MAAOnF,EAAMmF,MAEbhF,GAAE,uBAAkBH,EAAMsJ,OAC1BhJ,SAZJ,SAAkByB,GAChB,IAAMwH,EAAUvJ,EAAMwJ,SAClBD,GACFA,EAAQvJ,EAAMsJ,MAdpB,SAAqBG,GAAsB,IAAD,gBACpBC,WAASC,YADW,IACxC,2BAAyC,CAAC,IAA/BC,EAA8B,QACvC,GAAIH,IAASG,EAAMH,KACjB,OAAOG,GAH6B,+BAcfC,CAAY9H,KAKnC,SAMG/B,EAAM8J,OAAO/D,KAAI,SAAC6D,EAAcG,GAC/B,OACE,cAACf,EAAA,EAASgB,KAAV,CAAmDjI,SAAU6H,EAAMH,KAAnE,SACGG,EAAMH,MADT,UAAuBzJ,EAAMsJ,MAA7B,YAAsCS,QANrC/J,EAAMsJ,Q,SCmCFW,MA7Df,SAAyBjK,GACvB,SAASkK,EAAcZ,GAErB,OAAIA,IAAWtJ,EAAMmK,MAAM7C,OAAS,EAC3B,IAGD,GAAKgC,EAAS,GAGxB,SAASc,EAAWd,GAClB,IAAMe,EAAOrK,EAAMmK,MAAMb,GACzB,GAAIe,EACF,OACE,qBACEC,UAAU,QACVC,EAAGL,EAAcZ,GACjBkB,KAAMH,EAAKI,YAMnB,OACE,qBAAKrI,UAAU,kBAAf,SACE,sBAAKsI,MAAM,MAAMC,QAAQ,aAAzB,UACE,iCACE,mBAAGxK,GAAG,OAAN,SACE,sBAAMyK,EAAE,KAAKC,OAAO,IAAIH,MAAM,IAAIF,KAAK,YAEzC,oBAAGrK,GAAG,WAAN,UACE,sBACEyK,EAAE,IACFL,EAAE,IACFG,MAAM,MACNG,OAAO,KACPC,GAAG,IACHC,GAAG,IACHC,OAAO,QACPC,YAAY,MACZT,KAAK,cAEP,qBAAKF,UAAU,QAAQC,EAAE,MACzB,qBAAKD,UAAU,QAAQC,EAAE,WAE3B,mBAAGpK,GAAG,OAAN,SACE,sBAAMyK,EAAE,IAAIC,OAAO,KAAKH,MAAM,KAAKM,OAAO,QAAQC,YAAY,aAGlE,qBAAKX,UAAU,YAAYC,EAAE,IAAIK,EAAE,MAClCR,EAAW,GACXA,EAAW,GACXA,EAAW,GACXA,EAAW,GACXA,EAAW,GA7Bd,yDCjBAc,G,OAAqB,CACzBC,cAMF,SAASC,EAAiBjB,GAExB,IAAML,EAASK,EACZkB,MAAM,GAAI,GACVC,QAAO,SAACjB,GAAD,QAAYA,KAEhBjJ,EAAQsI,WAAS6B,SAASzB,GAChC,OAAI1I,IAAUsI,WAAS8B,iBACd,0BAED,GAAN,OAAU9B,WAAS+B,gBAAgBrK,GAAnC,wBAA2D+I,EAAMA,EAAM7C,OAAS,GAAIoE,mBAApF,KAiFWC,MA9FGC,aAPM,SAACC,GAAD,MAAuB,CAC7C1B,MAAO0B,EAAMC,SAAS3B,SAMmBe,EA8F5BS,EA7Ef,SAAuB3L,GACrB,SAAS+L,EAAcC,EAAmBpC,GACxC,IAAMqC,EAAarC,EAAQF,WAASC,WAAWuC,QAAQtC,IAAU,EACjE5J,EAAMmL,QAAQ,CACZa,YACAC,eAIJ,IAAM9B,EAAQnK,EAAMmK,MAAMpE,KAAI,SAAC3E,GAAD,OAAWsI,WAASC,WAAWvI,MACvD+K,EAAkBzC,WAASC,WAAW2B,QAAO,SAAA1B,GAAK,OAAIA,EAAMwC,cAC5DC,EAAsB3C,WAASC,WAAW2B,QAAO,SAAA1B,GAAK,OAAIA,EAAM0C,kBAEtE,OACE,sBAAKlK,UAAU,gBAAf,UACE,eAACmK,EAAA,EAAD,CAAMnK,UAAU,sBAAhB,UACE,cAACmK,EAAA,EAAKC,OAAN,oBACA,eAACD,EAAA,EAAKE,KAAN,WACE,qBAAKrK,UAAU,wBAAf,SACE,cAAC,EAAD,CAAiB+H,MAAOA,MAE1B,qBAAK/H,UAAU,oBAAf,SACE,eAACsK,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,CACErD,MAAO,EACPnE,MAAM,aACN2E,OAAQqC,EACR3C,SAAUuC,MAGd,cAACY,EAAA,EAAD,UACE,cAAC,EAAD,CACErD,MAAO,EACPnE,MAAM,cACN2E,OAAQqC,EACR3C,SAAUuC,MAGd,cAACY,EAAA,EAAD,UACE,cAAC,EAAD,CACErD,MAAO,EACPnE,MAAM,aACN2E,OAAQJ,WAASC,WACjBH,SAAUuC,MAGd,cAACY,EAAA,EAAD,UACE,cAAC,EAAD,CACErD,MAAO,EACPnE,MAAM,cACN2E,OAAM,CAAG,IAAI8C,qBAAM,OAAQ,GAAI,IAAzB,mBAAgClD,WAASC,aAC/CH,SAAUuC,MAGd,cAACY,EAAA,EAAD,UACE,cAAC,EAAD,CACErD,MAAO,EACPnE,MAAM,iBACN2E,OAAQuC,EACR7C,SAAUuC,iBAOtB,eAACQ,EAAA,EAAD,CAAMnK,UAAU,uBAAhB,UACE,cAACmK,EAAA,EAAKC,OAAN,qBACA,cAACD,EAAA,EAAKE,KAAN,UACGrB,EAAiBjB,c,SCzGrB,SAAS0C,EAAoBC,GAEhC,IAAMC,EAAUD,EAAWE,UAAU,GAC/BpD,EAAQqD,SAASF,EAAS,IAMhC,MADa,OAHAnD,GAAS,GAAM,KAGA,OAFbA,GAAS,EAAK,KAEgB,OADvB,IAARA,GAEH,GAEA,UAEA,U,OCRf,SAASsD,EAAe9L,GACtB,MAAO,CACL+L,gBAAiB/L,EAAMqJ,UACvBb,MAAOiD,EAAoBzL,EAAMqJ,YA+BtB2C,MA3Bf,WACE,OACE,qBAAKhL,UAAU,gBAAf,SACE,eAACiC,EAAA,EAAD,CAAOC,SAAS,EAAMM,YAAY,EAAlC,UACE,gCACE,+BACE,uCACA,uCACA,4CACA,oDAGJ,gCACG8E,WAASC,WAAW5D,KAAI,SAAC3E,GAAD,OACvB,+BACE,oBAAIiM,MAAOH,EAAe9L,GAA1B,SAAmCA,EAAMqI,OACzC,6BAAKrI,EAAMqK,oBACX,6BAAKrK,EAAMkM,aACX,6BAAKlM,EAAMsK,uBAJJtK,EAAMqI,iBCdrByB,EAAqB,CACzBqC,eAGI5B,EAAYC,aAPM,SAACC,GAAD,MAAuB,CAC7C2B,YAAa3B,EAAMC,SAAS0B,eAMatC,GAsB5BS,aAnBf,SAAmB3L,GACjB,OACE,cAACyN,EAAA,EAAD,CAActI,MAAM,YAApB,SACE,eAACK,EAAA,EAAD,CACEtF,UAAWF,EAAMwN,YACjBrN,GAAG,iBACHG,SAAUN,EAAMuN,UAHlB,UAKE,cAAChH,EAAA,EAAD,CAAKxE,SAAS,IAAIoD,MAAM,QAAxB,SACE,cAAC,EAAD,MAEF,cAACoB,EAAA,EAAD,CAAKxE,SAAS,IAAIoD,MAAM,YAAxB,SACE,cAAC,EAAD","file":"static/js/6.bb0b4a8f.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nconst alignDirection = PropTypes.oneOf(['start', 'end']);\nexport const alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n}), PropTypes.shape({\n  xxl: alignDirection\n})]);","import * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst TabContainer = props => {\n  const {\n    id,\n    generateChildId: generateCustomChildId,\n    onSelect,\n    activeKey,\n    transition,\n    mountOnEnter,\n    unmountOnExit,\n    children\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const generateChildId = useMemo(() => generateCustomChildId || ((key, type) => id ? `${id}-${type}-${key}` : null), [id, generateCustomChildId]);\n  const tabContext = useMemo(() => ({\n    onSelect,\n    activeKey,\n    transition,\n    mountOnEnter: mountOnEnter || false,\n    unmountOnExit: unmountOnExit || false,\n    getControlledId: key => generateChildId(key, 'tabpane'),\n    getControllerId: key => generateChildId(key, 'tab')\n  }), [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/_jsx(TabContext.Provider, {\n    value: tabContext,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: onSelect || null,\n      children: children\n    })\n  });\n};\n\nexport default TabContainer;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('tab-content');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useTabContext(props) {\n  const context = useContext(TabContext);\n  if (!context) return props;\n  const {\n    activeKey,\n    getControlledId,\n    getControllerId,\n    ...rest\n  } = context;\n  const shouldTransition = props.transition !== false && rest.transition !== false;\n  const key = makeEventKey(props.eventKey);\n  return { ...props,\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  };\n}\n\nconst TabPane = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    bsPrefix,\n    className,\n    active,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited,\n    mountOnEnter,\n    unmountOnExit,\n    transition: Transition,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    eventKey: _,\n    ...rest\n  } = useTabContext(props);\n  const prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n\n  let pane = /*#__PURE__*/_jsx(Component, { ...rest,\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active\n    })\n  });\n\n  if (Transition) pane = /*#__PURE__*/_jsx(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    children: pane\n  }); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/_jsx(TabContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: null,\n      children: pane\n    })\n  });\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  ...props\n}, ref) => {\n  const handleEnter = useCallback(node => {\n    triggerBrowserReflow(node);\n    props.onEnter == null ? void 0 : props.onEnter(node);\n  }, [props]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status])\n    })\n  });\n});\nFade.defaultProps = defaultProps;\nFade.displayName = 'Fade';\nexport default Fade;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import * as React from 'react';\nimport requiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport { useUncontrolled } from 'uncontrollable';\nimport Nav from './Nav';\nimport NavLink from './NavLink';\nimport NavItem from './NavItem';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\nimport { forEach, map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'tabs',\n  mountOnEnter: false,\n  unmountOnExit: false\n};\n\nfunction getDefaultActiveKey(children) {\n  let defaultActiveKey;\n  forEach(children, child => {\n    if (defaultActiveKey == null) {\n      defaultActiveKey = child.props.eventKey;\n    }\n  });\n  return defaultActiveKey;\n}\n\nfunction renderTab(child) {\n  const {\n    title,\n    eventKey,\n    disabled,\n    tabClassName,\n    id\n  } = child.props;\n\n  if (title == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(NavItem, {\n    as: \"li\",\n    role: \"presentation\",\n    children: /*#__PURE__*/_jsx(NavLink, {\n      as: \"button\",\n      type: \"button\",\n      eventKey: eventKey,\n      disabled: disabled,\n      id: id,\n      className: tabClassName,\n      children: title\n    })\n  });\n}\n\nconst Tabs = props => {\n  const {\n    id,\n    onSelect,\n    transition,\n    mountOnEnter,\n    unmountOnExit,\n    children,\n    activeKey = getDefaultActiveKey(children),\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  return /*#__PURE__*/_jsxs(TabContainer, {\n    id: id,\n    activeKey: activeKey,\n    onSelect: onSelect,\n    transition: transition,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    children: [/*#__PURE__*/_jsx(Nav, { ...controlledProps,\n      role: \"tablist\",\n      as: \"ul\",\n      children: map(children, renderTab)\n    }), /*#__PURE__*/_jsx(TabContent, {\n      children: map(children, child => {\n        const childProps = { ...child.props\n        };\n        delete childProps.title;\n        delete childProps.disabled;\n        delete childProps.tabClassName;\n        return /*#__PURE__*/_jsx(TabPane, { ...childProps\n        });\n      })\n    })]\n  });\n};\n\nTabs.defaultProps = defaultProps;\nTabs.displayName = 'Tabs';\nexport default Tabs;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/* eslint-disable react/no-unused-prop-types */\nconst propTypes = {\n  eventKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Content for the tab title.\n   */\n  title: PropTypes.node.isRequired,\n\n  /**\n   * The disabled state of the tab.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Class to pass to the underlying nav link.\n   */\n  tabClassName: PropTypes.string\n};\n\nconst Tab = () => {\n  throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly'); // Needed otherwise docs error out.\n\n  return /*#__PURE__*/_jsx(_Fragment, {});\n};\n\nTab.propTypes = propTypes;\nexport default Object.assign(Tab, {\n  Container: TabContainer,\n  Content: TabContent,\n  Pane: TabPane\n});","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nconst DropdownButton = /*#__PURE__*/React.forwardRef(({\n  title,\n  children,\n  bsPrefix,\n  rootCloseEvent,\n  variant,\n  size,\n  menuRole,\n  renderMenuOnMount,\n  disabled,\n  href,\n  id,\n  menuVariant,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  children: [/*#__PURE__*/_jsx(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    children: title\n  }), /*#__PURE__*/_jsx(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant,\n    children: children\n  })]\n}));\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","import { ResistorColorEntry as Color, Resistor } from 'puzzle-lib';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n\ninterface ColorSelectorProps {\n  colors: Color[];\n  index: number;\n  title: string;\n  onChange?: (index: number, color?: Color) => void;\n}\n\nfunction colorByName(name: string | null) {\n  for (const color of Resistor.colorTable) {\n    if (name === color.name) {\n      return color;\n    }\n  }\n\n  return undefined;\n}\n\nfunction ResistorColorSelector(props: ColorSelectorProps) {\n  function onSelect(eventKey: string | null) {\n    const handler = props.onChange;\n    if (handler) {\n      handler(props.index, colorByName(eventKey));\n    }\n  }\n\n  return (\n    <DropdownButton\n      title={props.title}\n      key={props.index}\n      id={`color-select-${props.index}`}\n      onSelect={onSelect}\n    >\n      {props.colors.map((color: Color, itemIndex: number) => {\n        return (\n          <Dropdown.Item key={`${props.index}-${itemIndex}`} eventKey={color.name}>\n            {color.name}\n          </Dropdown.Item>\n        );\n      })}\n    </DropdownButton>\n  );\n}\n\nexport default ResistorColorSelector;\n","import { ResistorColorEntry as Color } from 'puzzle-lib';\n\ninterface Props {\n  bands: (Color | undefined)[];\n}\n\nfunction ResistorPicture(props: Props) {\n  function getBandOffset(index: number) {\n    // The tolerance band is spaced further apart than the rest of the bands\n    if (index === (props.bands.length - 1)) {\n      return 104;\n    }\n\n    return (18 * index) + 20;\n  }\n\n  function renderBand(index: number) {\n    const band = props.bands[index];\n    if (band) {\n      return (\n        <use\n          xlinkHref=\"#Band\"\n          x={getBandOffset(index)}\n          fill={band.colorCode}\n        />\n      );\n    }\n  }\n\n  return (\n    <div className=\"ResistorPicture\">\n      <svg width=\"240\" viewBox=\"0 0 136 40\">\n        <defs>\n          <g id=\"Wire\">\n            <rect y=\"20\" height=\"1\" width=\"8\" fill=\"black\" />\n          </g>\n          <g id=\"Resistor\">\n            <rect\n              y=\"8\"\n              x=\"8\"\n              width=\"120\"\n              height=\"24\"\n              rx=\"4\"\n              ry=\"4\"\n              stroke=\"black\"\n              strokeWidth=\"0.5\"\n              fill=\"burlywood\"\n            />\n            <use xlinkHref=\"#Wire\" x=\"0\" />\n            <use xlinkHref=\"#Wire\" x=\"128\" />\n          </g>\n          <g id=\"Band\">\n            <rect y=\"8\" height=\"24\" width=\"12\" stroke=\"black\" strokeWidth=\"0.5\" />\n          </g>\n        </defs>\n        <use xlinkHref=\"#Resistor\" x=\"0\" y=\"0\" />\n        {renderBand(0)}\n        {renderBand(1)}\n        {renderBand(2)}\n        {renderBand(3)}\n        {renderBand(4)}\n        Sorry, your browser does not support inline SVG.\n      </svg>\n    </div>\n  );\n}\n\nexport default ResistorPicture;\n","import { ResistorColorEntry as Color, Resistor } from 'puzzle-lib';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport Card from 'react-bootstrap/Card';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { RootState } from '../../Store/rootReducer';\nimport ResistorColorSelector from './ResistorColorSelector';\nimport { setBand } from './resistorSlice';\nimport ResistorPicture from './ResistorPicture';\nimport './ResistorInput.scss';\n\nconst mapStateToProps = (state: RootState) => ({\n  bands: state.resistor.bands,\n});\nconst mapDispatchToProps = {\n  setBand,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype Props = ConnectedProps<typeof connector>;\n\nfunction getResistorValue(bands: (Color | undefined)[]) {\n  // The last band is a tolerance so we need to calculate the value without it.\n  const colors = bands\n    .slice(0, -1)\n    .filter((band) => !!band) as Color[];\n\n  const value = Resistor.getValue(colors);\n  if (value === Resistor.INVALID_RESISTOR) {\n    return 'Invalid Resistor Colors';\n  } else {\n    return `${Resistor.getDisplayValue(value)} \\u2126 \\u00b1 ${bands[bands.length - 1]!.toleranceInPercent}%`;\n  }\n}\n\nfunction ResistorInput(props: Props) {\n  function onColorChange(bandIndex: number, color?: Color) {\n    const colorIndex = color ? Resistor.colorTable.indexOf(color) : -1;\n    props.setBand({\n      bandIndex,\n      colorIndex,\n    });\n  }\n\n  const bands = props.bands.map((value) => Resistor.colorTable[value]);\n  const colorsWithValue = Resistor.colorTable.filter(color => color.hasValue());\n  const colorsWithTolerance = Resistor.colorTable.filter(color => color.hasTolerance());\n\n  return (\n    <div className=\"ResistorInput\">\n      <Card className=\"ResistorInput-input\">\n        <Card.Header>Input</Card.Header>\n        <Card.Body>\n          <div className=\"ResistorInput-display\">\n            <ResistorPicture bands={bands} />\n          </div>\n          <div className=\"ResistorSelectors\">\n            <ButtonToolbar>\n              <ButtonGroup>\n                <ResistorColorSelector\n                  index={0}\n                  title=\"First Band\"\n                  colors={colorsWithValue}\n                  onChange={onColorChange}\n                />\n              </ButtonGroup>\n              <ButtonGroup>\n                <ResistorColorSelector\n                  index={1}\n                  title=\"Second Band\"\n                  colors={colorsWithValue}\n                  onChange={onColorChange}\n                />\n              </ButtonGroup>\n              <ButtonGroup>\n                <ResistorColorSelector\n                  index={2}\n                  title=\"Third Band\"\n                  colors={Resistor.colorTable}\n                  onChange={onColorChange}\n                />\n              </ButtonGroup>\n              <ButtonGroup>\n                <ResistorColorSelector\n                  index={3}\n                  title=\"Fourth Band\"\n                  colors={[new Color('None', '', 0), ...Resistor.colorTable]}\n                  onChange={onColorChange}\n                />\n              </ButtonGroup>\n              <ButtonGroup>\n                <ResistorColorSelector\n                  index={4}\n                  title=\"Tolerance Band\"\n                  colors={colorsWithTolerance}\n                  onChange={onColorChange}\n                />\n              </ButtonGroup>\n            </ButtonToolbar>\n          </div>\n        </Card.Body>\n      </Card>\n      <Card className=\"ResistorInput-output\">\n        <Card.Header>Output</Card.Header>\n        <Card.Body>\n          {getResistorValue(bands)}\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default connector(ResistorInput);\n","export function getContrastingColor(background: String) {\n    // Calculate Luma as per Rec. 709: https://en.wikipedia.org/wiki/Luma_(video)\n    const hexCode = background.substring(1);  // Remove the leading #\n    const color = parseInt(hexCode, 16);\n    // tslint:disable no-bitwise\n    const red = (color >> 16) & 0xff;\n    const green = (color >> 8) & 0xff;\n    const blue = (color & 0xff);\n    const luma = 0.2126 * red + 0.7152 * green + 0.0722 * blue;\n    if (luma < 40) {\n        // Dark background; use bright foreground\n        return '#ffffff';\n    } else {\n        return '#000000';\n    }\n}\n","import { ResistorColorEntry as Color, Resistor } from 'puzzle-lib';\nimport Table from 'react-bootstrap/Table';\nimport { getContrastingColor } from '../../Common/Helpers';\nimport './ResistorTable.scss';\n\nfunction cellColorStyle(value: Color) {\n  return {\n    backgroundColor: value.colorCode,\n    color: getContrastingColor(value.colorCode),\n  };\n}\n\nfunction ResistorTable() {\n  return (\n    <div className=\"ResistorTable\">\n      <Table striped={true} responsive={true}>\n        <thead>\n          <tr>\n            <th>Color</th>\n            <th>Value</th>\n            <th>Multiplier</th>\n            <th>Tolerance (%)</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Resistor.colorTable.map((value: Color) => (\n            <tr key={value.name}>\n              <td style={cellColorStyle(value)}>{value.name}</td>\n              <td>{value.getDisplayValue()}</td>\n              <td>{value.multiplier}</td>\n              <td>{value.toleranceInPercent}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n\nexport default ResistorTable;\n","import Tab from 'react-bootstrap/Tab';\nimport { connect, ConnectedProps } from 'react-redux';\nimport Tabs from 'react-bootstrap/Tabs';\nimport PuzzToolPage from '../../Common/PuzzToolPage';\nimport { RootState } from '../../Store/rootReducer';\nimport ResistorInput from './ResistorInput';\nimport { selectTab } from './resistorSlice';\nimport ResistorTable from './ResistorTable';\n\nconst mapStateToProps = (state: RootState) => ({\n  selectedTab: state.resistor.selectedTab,\n});\nconst mapDispatchToProps = {\n  selectTab,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype Props = ConnectedProps<typeof connector>;\n\nfunction Resistors(props: Props) {\n  return (\n    <PuzzToolPage title=\"Resistors\">\n      <Tabs\n        activeKey={props.selectedTab}\n        id=\"Resistors-tabs\"\n        onSelect={props.selectTab}\n      >\n        <Tab eventKey=\"1\" title=\"Value\">\n          <ResistorInput />\n        </Tab>\n        <Tab eventKey=\"2\" title=\"Reference\">\n          <ResistorTable />\n        </Tab>\n      </Tabs>\n    </PuzzToolPage>\n  );\n}\n\nexport default connector(Resistors);\n"],"sourceRoot":""}