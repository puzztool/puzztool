{"version":3,"sources":["../node_modules/react-bootstrap/esm/Table.js","../node_modules/react-bootstrap/esm/Container.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Col.js","Features/WordSearch/WordSearchOutput.module.scss","Features/WordSearch/WordSearchComponent.module.scss","../node_modules/react-bootstrap/esm/Alert.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","Features/WordSearch/WordSearchOutput.tsx","Features/WordSearch/WordSearchComponent.tsx","Features/WordSearch/index.tsx"],"names":["Table","React","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","Container","fluid","as","Component","prefix","suffix","displayName","defaultProps","DEVICE_SIZES","Row","sizePrefix","forEach","brkPoint","cols","propValue","infix","push","Col","spans","span","offset","order","useCol","colProps","length","module","exports","DivStyledAsH4","divWithClassName","AlertHeading","createWithBsPrefix","AlertLink","Anchor","show","transition","Fade","closeLabel","Alert","uncontrolledProps","useUncontrolled","closeVariant","onClose","dismissible","handleClose","useEventCallback","e","Transition","alert","_jsxs","role","undefined","CloseButton","onClick","unmountOnExit","in","Object","assign","Link","Heading","FormCheckInput","id","type","isValid","isInvalid","controlId","useContext","FormContext","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","inline","disabled","feedbackTooltip","feedback","feedbackType","style","title","label","innerFormContext","useMemo","hasLabel","input","Provider","value","_Fragment","Feedback","tooltip","Input","Label","splitLines","str","split","getGridHighlights","grid","wordsToFind","direction","canBend","solver","WordSearchSolver","setDirections","setCanBend","setGrid","setWords","inputGrid","results","shouldHighlight","line","hightlightLine","Array","from","result","points","point","y","x","highlightArray","findWords","getColumnClassName","styles","highlightChar","WordSearchOutput","gridInputText","trim","lines","useCardinals","useDiagonals","WordSearchDirection","CardinalAndDiagonal","Cardinal","Diagonal","None","wordListInputText","filter","word","container","map","row","rowIndex","col","colIndex","mapDispatchToProps","setUseCardinals","setUseDiagonals","setWordList","connector","connect","state","wordSearch","wordList","inputRef","useFocusInput","md","Card","listInput","Header","Body","FormControl","onChange","event","currentTarget","placeholder","renderEmptyDirection","checked","gridInput","spellCheck","WordSearch","PuzzToolPage"],"mappings":"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","file":"static/js/8.2a5565b9.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  fluid: false\n};\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WordSearchOutput_container__2Udzp\",\"highlightChar\":\"WordSearchOutput_highlightChar__1-JSB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"WordSearchComponent_container__ylEce\",\"listInput\":\"WordSearchComponent_listInput__3ovvE\",\"gridInput\":\"WordSearchComponent_gridInput__2f4Ev\"};","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport divWithClassName from './divWithClassName';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nconst AlertLink = createWithBsPrefix('alert-link', {\n  Component: Anchor\n});\nconst defaultProps = {\n  variant: 'primary',\n  show: true,\n  transition: Fade,\n  closeLabel: 'Close alert'\n};\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show,\n    closeLabel,\n    closeVariant,\n    className,\n    children,\n    variant,\n    onClose,\n    dismissible,\n    transition,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nAlert.defaultProps = defaultProps;\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", { ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = label != null && label !== false && !children;\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, label && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import Table from \"react-bootstrap/Table\";\nimport {\n  WordSearchSolver,\n  WordSearchResult,\n  WordSearchDirection,\n} from \"puzzle-lib\";\nimport styles from \"./WordSearchOutput.module.scss\";\n\ninterface Props {\n  gridInputText: string;\n  useCardinals: boolean;\n  useDiagonals: boolean;\n  canBend: boolean;\n  wordListInputText: string;\n}\n\nfunction getWordSearchDirection(useCardinals: boolean, useDiagonals: boolean) {\n  if (useCardinals && useDiagonals) {\n    return WordSearchDirection.CardinalAndDiagonal;\n  } else if (useCardinals) {\n    return WordSearchDirection.Cardinal;\n  } else if (useDiagonals) {\n    return WordSearchDirection.Diagonal;\n  }\n\n  return WordSearchDirection.None;\n}\n\nfunction splitLines(str: string) {\n  return str.split(/\\r?\\n/);\n}\n\nfunction highlightArray(inputGrid: string[][], results: WordSearchResult[]) {\n  const shouldHighlight: boolean[][] = [];\n\n  for (const line of inputGrid) {\n    const hightlightLine = Array.from({ length: line.length }, () => false);\n    shouldHighlight.push(hightlightLine);\n  }\n\n  for (const result of results) {\n    for (const point of result.points) {\n      shouldHighlight[point.y][point.x] = true;\n    }\n  }\n\n  return shouldHighlight;\n}\n\nfunction getGridHighlights(\n  grid: string[][],\n  wordsToFind: string[],\n  direction: WordSearchDirection,\n  canBend: boolean\n) {\n  const solver = new WordSearchSolver();\n  solver.setDirections(direction);\n  solver.setCanBend(canBend);\n  solver.setGrid(grid);\n  solver.setWords(wordsToFind);\n  const results = solver.findWords();\n\n  return highlightArray(grid, results);\n}\n\nfunction getColumnClassName(shouldHighlight: boolean) {\n  return shouldHighlight ? styles.highlightChar : \"\";\n}\n\nfunction WordSearchOutput(props: Props) {\n  const gridInputText = props.gridInputText.trim();\n  if (!gridInputText) {\n    return null;\n  }\n\n  const lines = splitLines(gridInputText);\n  const grid: string[][] = [];\n  for (const line of lines) {\n    grid.push(line.split(\"\"));\n  }\n\n  // Process direction settings\n  const direction = getWordSearchDirection(\n    props.useCardinals,\n    props.useDiagonals\n  );\n\n  // Split on newlines, trim any whitespace, and filter out empty lines.\n  const wordList = splitLines(props.wordListInputText).filter(\n    (word) => word.length > 0\n  );\n\n  const shouldHighlight = getGridHighlights(\n    grid,\n    wordList,\n    direction,\n    props.canBend\n  );\n\n  return (\n    <Table className={styles.container} borderless={true}>\n      <tbody>\n        {grid.map((row, rowIndex) => (\n          <tr key={rowIndex}>\n            {row.map((col, colIndex) => (\n              <td\n                className={getColumnClassName(\n                  shouldHighlight[rowIndex][colIndex]\n                )}\n                key={`${rowIndex},${colIndex}`}\n              >\n                {col}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n}\n\nexport default WordSearchOutput;\n","import { ChangeEvent } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Card from \"react-bootstrap/Card\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport FormCheck from \"react-bootstrap/FormCheck\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Row from \"react-bootstrap/Row\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { useFocusInput } from \"../../Hooks/FocusInput\";\nimport { RootState } from \"../../Store/rootReducer\";\nimport WordSearchOutput from \"./WordSearchOutput\";\nimport {\n  setCanBend,\n  setGrid,\n  setUseCardinals,\n  setUseDiagonals,\n  setWordList,\n} from \"./wordSearchSlice\";\nimport styles from \"./WordSearchComponent.module.scss\";\n\nconst mapStateToProps = (state: RootState) => ({\n  canBend: state.wordSearch.canBend,\n  grid: state.wordSearch.grid,\n  useCardinals: state.wordSearch.useCardinals,\n  useDiagonals: state.wordSearch.useDiagonals,\n  wordList: state.wordSearch.wordList,\n});\nconst mapDispatchToProps = {\n  setCanBend,\n  setGrid,\n  setUseCardinals,\n  setUseDiagonals,\n  setWordList,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\ntype Props = ConnectedProps<typeof connector>;\n\nfunction WordSearchComponent(props: Props) {\n  const inputRef = useFocusInput();\n\n  function onGridTextChanged(event: ChangeEvent<HTMLTextAreaElement>) {\n    props.setGrid(event.currentTarget.value);\n  }\n\n  function onListTextChanged(event: ChangeEvent<HTMLTextAreaElement>) {\n    props.setWordList(event.currentTarget.value);\n  }\n\n  function onCardinalCheckboxChange(event: ChangeEvent<HTMLInputElement>) {\n    props.setUseCardinals(event.currentTarget.checked);\n  }\n\n  function onDiagonalCheckboxChange(event: ChangeEvent<HTMLInputElement>) {\n    props.setUseDiagonals(event.currentTarget.checked);\n  }\n\n  function onSetCanBendChange(event: ChangeEvent<HTMLInputElement>) {\n    props.setCanBend(event.currentTarget.checked);\n  }\n\n  function renderEmptyDirection() {\n    if (!props.useCardinals && !props.useDiagonals) {\n      return (\n        <Alert variant=\"warning\">\n          No directions are selected. No results will be shown.\n        </Alert>\n      );\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <Container fluid={true}>\n        <Row className=\"g-0\">\n          <Col md={4}>\n            <Card className={styles.listInput}>\n              <Card.Header>\n                Enter the list of words to find, one word per line\n              </Card.Header>\n              <Card.Body>\n                <FormControl\n                  as=\"textarea\"\n                  onChange={onListTextChanged}\n                  placeholder=\"Word List To Find\"\n                  value={props.wordList}\n                />\n                {renderEmptyDirection()}\n                <FormCheck\n                  checked={props.useDiagonals}\n                  id=\"WordSearchComponent-checkbox-diagonal\"\n                  label=\"Use diagonal directions\"\n                  onChange={onDiagonalCheckboxChange}\n                  type=\"checkbox\"\n                />\n                <FormCheck\n                  checked={props.useCardinals}\n                  id=\"WordSearchComponent-checkbox-cardinal\"\n                  label=\"Use cardinal directions\"\n                  onChange={onCardinalCheckboxChange}\n                  type=\"checkbox\"\n                />\n                <FormCheck\n                  checked={props.canBend}\n                  id=\"WordSearchComponent-checkbox-bend\"\n                  label=\"Words can bend (may not be straight lines)\"\n                  onChange={onSetCanBendChange}\n                  type=\"checkbox\"\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md={8}>\n            <Card className={styles.gridInput}>\n              <Card.Header>\n                Enter the word search grid, one row of letters per line\n              </Card.Header>\n              <Card.Body>\n                <FormControl\n                  as=\"textarea\"\n                  onChange={onGridTextChanged}\n                  placeholder=\"Grid Text\"\n                  ref={inputRef}\n                  spellCheck={false}\n                  value={props.grid}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Row className=\"g-0\">\n          <Col md={12}>\n            <Card>\n              <Card.Header>Output</Card.Header>\n              <Card.Body>\n                <WordSearchOutput\n                  gridInputText={props.grid}\n                  useCardinals={props.useCardinals}\n                  useDiagonals={props.useDiagonals}\n                  canBend={props.canBend}\n                  wordListInputText={props.wordList}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default connector(WordSearchComponent);\n","import PuzzToolPage from \"../../Common/PuzzToolPage\";\nimport WordSearchComponent from \"./WordSearchComponent\";\n\nfunction WordSearch() {\n  return (\n    <PuzzToolPage title=\"Word Search\">\n      <WordSearchComponent />\n    </PuzzToolPage>\n  );\n}\n\nexport default WordSearch;\n"],"sourceRoot":""}