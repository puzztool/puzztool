{"version":3,"sources":["../node_modules/react-bootstrap/esm/TabContainer.js","../node_modules/react-bootstrap/esm/TabContent.js","../node_modules/react-bootstrap/esm/TabPane.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/react-bootstrap/esm/Tabs.js","../node_modules/react-bootstrap/esm/Tab.js","../node_modules/react-bootstrap/esm/Container.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Col.js","Common/ReferenceList/index.tsx","Features/Encoding/Braille/BrailleCell.tsx","Features/Encoding/Braille/BrailleCharacter.tsx","Features/Encoding/Braille/BrailleStream.tsx","Features/Encoding/Braille/BraillePicture.tsx","Features/Encoding/Braille/BrailleReference.tsx","Features/Encoding/Braille/index.tsx"],"names":["TabContainer","props","useUncontrolled","activeKey","id","generateCustomChildId","generateChildId","onSelect","transition","mountOnEnter","unmountOnExit","children","useMemo","key","type","tabContext","getControlledId","getControllerId","_jsx","TabContext","Provider","value","SelectableContext","createWithBsPrefix","TabPane","React","ref","context","useContext","rest","shouldTransition","makeEventKey","eventKey","active","Fade","useTabContext","bsPrefix","className","onEnter","onEntering","onEntered","onExit","onExiting","onExited","Transition","as","Component","prefix","useBootstrapPrefix","pane","role","classNames","in","displayName","fadeStyles","ENTERING","ENTERED","handleEnter","useCallback","node","triggerBrowserReflow","TransitionWrapper","addEndListener","transitionEndListener","childRef","status","innerProps","defaultProps","timeout","appear","renderTab","child","title","disabled","tabClassName","NavItem","NavLink","Tabs","defaultActiveKey","forEach","getDefaultActiveKey","controlledProps","_jsxs","Nav","map","TabContent","childProps","variant","propTypes","PropTypes","oneOfType","string","number","isRequired","bool","Tab","Error","Object","assign","Container","Content","Pane","fluid","suffix","DEVICE_SIZES","Row","decoratedBsPrefix","sizePrefix","classes","brkPoint","cols","propValue","infix","push","Col","spans","span","offset","order","length","ReferenceList","BrailleCell","character","get","mask","onClick","handler","viewBox","cx","cy","r","BrailleCharacter","renderCell","Dot","UpperLeft","UpperRight","MiddleLeft","MiddleRight","LowerLeft","LowerRight","mapDispatchToProps","append","backspace","clear","setEncoding","space","connector","connect","state","encoding","braille","stream","onCharacterClick","Character","toggle","onNextClick","valid","valueOf","useEffect","onKeyDown","ev","defaultPrevented","handled","keyCode","preventDefault","onKeyPress","charCode","Math","pow","document","addEventListener","removeEventListener","Card","Header","Body","xs","sm","md","toString","ButtonToolbar","ButtonGroup","Button","Stream","BraillePicture","brailleDot","dot","x","y","transform","xlinkHref","width","fill","strokeWidth","stroke","BrailleReference","characters","getPotentialMatches","entry","category","display","selectTab","selectedTab","PuzzToolPage"],"mappings":"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","file":"static/js/3.46662867.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport TabContext from './TabContext';\nimport SelectableContext from './SelectableContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst TabContainer = props => {\n  const {\n    id,\n    generateChildId: generateCustomChildId,\n    onSelect,\n    activeKey,\n    transition,\n    mountOnEnter,\n    unmountOnExit,\n    children\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const generateChildId = useMemo(() => generateCustomChildId || ((key, type) => id ? `${id}-${type}-${key}` : null), [id, generateCustomChildId]);\n  const tabContext = useMemo(() => ({\n    onSelect,\n    activeKey,\n    transition,\n    mountOnEnter: mountOnEnter || false,\n    unmountOnExit: unmountOnExit || false,\n    getControlledId: key => generateChildId(key, 'tabpane'),\n    getControllerId: key => generateChildId(key, 'tab')\n  }), [onSelect, activeKey, transition, mountOnEnter, unmountOnExit, generateChildId]);\n  return /*#__PURE__*/_jsx(TabContext.Provider, {\n    value: tabContext,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: onSelect || null,\n      children: children\n    })\n  });\n};\n\nexport default TabContainer;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('tab-content');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport TabContext from './TabContext';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport Fade from './Fade';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useTabContext(props) {\n  const context = useContext(TabContext);\n  if (!context) return props;\n  const {\n    activeKey,\n    getControlledId,\n    getControllerId,\n    ...rest\n  } = context;\n  const shouldTransition = props.transition !== false && rest.transition !== false;\n  const key = makeEventKey(props.eventKey);\n  return { ...props,\n    active: props.active == null && key != null ? makeEventKey(activeKey) === key : props.active,\n    id: getControlledId(props.eventKey),\n    'aria-labelledby': getControllerId(props.eventKey),\n    transition: shouldTransition && (props.transition || rest.transition || Fade),\n    mountOnEnter: props.mountOnEnter != null ? props.mountOnEnter : rest.mountOnEnter,\n    unmountOnExit: props.unmountOnExit != null ? props.unmountOnExit : rest.unmountOnExit\n  };\n}\n\nconst TabPane = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    bsPrefix,\n    className,\n    active,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited,\n    mountOnEnter,\n    unmountOnExit,\n    transition: Transition,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    eventKey: _,\n    ...rest\n  } = useTabContext(props);\n  const prefix = useBootstrapPrefix(bsPrefix, 'tab-pane');\n  if (!active && !Transition && unmountOnExit) return null;\n\n  let pane = /*#__PURE__*/_jsx(Component, { ...rest,\n    ref: ref,\n    role: \"tabpanel\",\n    \"aria-hidden\": !active,\n    className: classNames(className, prefix, {\n      active\n    })\n  });\n\n  if (Transition) pane = /*#__PURE__*/_jsx(Transition, {\n    in: active,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    children: pane\n  }); // We provide an empty the TabContext so `<Nav>`s in `<TabPane>`s don't\n  // conflict with the top level one.\n\n  return /*#__PURE__*/_jsx(TabContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(SelectableContext.Provider, {\n      value: null,\n      children: pane\n    })\n  });\n});\nTabPane.displayName = 'TabPane';\nexport default TabPane;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  in: false,\n  timeout: 300,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false\n};\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  ...props\n}, ref) => {\n  const handleEnter = useCallback(node => {\n    triggerBrowserReflow(node);\n    props.onEnter == null ? void 0 : props.onEnter(node);\n  }, [props]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, { ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status])\n    })\n  });\n});\nFade.defaultProps = defaultProps;\nFade.displayName = 'Fade';\nexport default Fade;","import * as React from 'react';\nimport requiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport { useUncontrolled } from 'uncontrollable';\nimport Nav from './Nav';\nimport NavLink from './NavLink';\nimport NavItem from './NavItem';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\nimport { forEach, map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'tabs',\n  mountOnEnter: false,\n  unmountOnExit: false\n};\n\nfunction getDefaultActiveKey(children) {\n  let defaultActiveKey;\n  forEach(children, child => {\n    if (defaultActiveKey == null) {\n      defaultActiveKey = child.props.eventKey;\n    }\n  });\n  return defaultActiveKey;\n}\n\nfunction renderTab(child) {\n  const {\n    title,\n    eventKey,\n    disabled,\n    tabClassName,\n    id\n  } = child.props;\n\n  if (title == null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(NavItem, {\n    as: \"li\",\n    role: \"presentation\",\n    children: /*#__PURE__*/_jsx(NavLink, {\n      as: \"button\",\n      type: \"button\",\n      eventKey: eventKey,\n      disabled: disabled,\n      id: id,\n      className: tabClassName,\n      children: title\n    })\n  });\n}\n\nconst Tabs = props => {\n  const {\n    id,\n    onSelect,\n    transition,\n    mountOnEnter,\n    unmountOnExit,\n    children,\n    activeKey = getDefaultActiveKey(children),\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  return /*#__PURE__*/_jsxs(TabContainer, {\n    id: id,\n    activeKey: activeKey,\n    onSelect: onSelect,\n    transition: transition,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    children: [/*#__PURE__*/_jsx(Nav, { ...controlledProps,\n      role: \"tablist\",\n      as: \"ul\",\n      children: map(children, renderTab)\n    }), /*#__PURE__*/_jsx(TabContent, {\n      children: map(children, child => {\n        const childProps = { ...child.props\n        };\n        delete childProps.title;\n        delete childProps.disabled;\n        delete childProps.tabClassName;\n        return /*#__PURE__*/_jsx(TabPane, { ...childProps\n        });\n      })\n    })]\n  });\n};\n\nTabs.defaultProps = defaultProps;\nTabs.displayName = 'Tabs';\nexport default Tabs;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport TabContainer from './TabContainer';\nimport TabContent from './TabContent';\nimport TabPane from './TabPane';\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/* eslint-disable react/no-unused-prop-types */\nconst propTypes = {\n  eventKey: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Content for the tab title.\n   */\n  title: PropTypes.node.isRequired,\n\n  /**\n   * The disabled state of the tab.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Class to pass to the underlying nav link.\n   */\n  tabClassName: PropTypes.string\n};\n\nconst Tab = () => {\n  throw new Error('ReactBootstrap: The `Tab` component is not meant to be rendered! ' + \"It's an abstract component that is only valid as a direct Child of the `Tabs` Component. \" + 'For custom tabs components use TabPane and TabsContainer directly'); // Needed otherwise docs error out.\n\n  return /*#__PURE__*/_jsx(_Fragment, {});\n};\n\nTab.propTypes = propTypes;\nexport default Object.assign(Tab, {\n  Container: TabContainer,\n  Content: TabContent,\n  Pane: TabPane\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  fluid: false\n};\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span = true,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${prefix}${infix}` : `${prefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, ...spans, ...classes)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import React, { FunctionComponent } from 'react';\nimport './index.scss';\n\nconst ReferenceList: FunctionComponent = (props) => {\n  return (\n    <div className=\"ReferenceList\">\n        {props.children}\n    </div>\n  );\n}\n\nexport default ReferenceList;\n","import { BrailleCharacter as Character, BrailleDot as Dot } from 'puzzle-lib';\nimport './BrailleCell.scss';\n\ninterface Props {\n  character: Character;\n  mask: Dot;\n  onClick?: (mask: Dot) => void;\n}\n\nfunction BrailleCell(props: Props) {\n  function onClick() {\n    const handler = props.onClick;\n    if (handler) {\n      handler(props.mask);\n    }\n  }\n\n  const classNames = `BrailleCell ${props.character.get(props.mask) ? 'BrailleCell-selected' : ''}`;\n  return (\n    <button className={classNames} onClick={onClick}>\n      <svg viewBox=\"0 0 60 60\">\n        <circle cx=\"30\" cy=\"30\" r=\"12\" />\n        Sorry, your browser does not support inline SVG.\n        </svg>\n    </button>\n  );\n}\n\nexport default BrailleCell;\n","import BrailleCell from './BrailleCell';\nimport { BrailleCharacter as Character, BrailleDot as Dot } from 'puzzle-lib';\nimport './BrailleCharacter.scss';\n\ninterface Props {\n  character: Character;\n  onClick?: (mask: Dot) => void;\n}\n\nfunction BrailleCharacter(props: Props) {\n  function onClick(mask: Dot) {\n    const handler = props.onClick;\n    if (handler) {\n      handler(mask);\n    }\n  }\n\n  function renderCell(mask: Dot) {\n    return (\n      <BrailleCell\n        character={props.character}\n        mask={mask}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"BrailleCharacter\">\n      {renderCell(Dot.UpperLeft)}\n      {renderCell(Dot.UpperRight)}\n      {renderCell(Dot.MiddleLeft)}\n      {renderCell(Dot.MiddleRight)}\n      {renderCell(Dot.LowerLeft)}\n      {renderCell(Dot.LowerRight)}\n    </div>\n  );\n}\n\nexport default BrailleCharacter;\n","import {\n  BrailleCharacter as Character,\n  BrailleDot as Dot,\n  BrailleStream as Stream\n} from 'puzzle-lib';\nimport React, { useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { RootState } from '../../../Store/rootReducer';\nimport BrailleCharacter from './BrailleCharacter';\nimport {\n  append,\n  backspace,\n  clear,\n  setEncoding,\n  space,\n} from './brailleEncodingSlice';\nimport './BrailleStream.scss';\n\nconst mapStateToProps = (state: RootState) => ({\n  encoding: state.encoding.braille.encoding,\n  stream: state.encoding.braille.stream,\n});\nconst mapDispatchToProps = {\n  append,\n  backspace,\n  clear,\n  setEncoding,\n  space,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface Props extends ConnectedProps<typeof connector> { }\n\nfunction BrailleStream(props: Props) {\n  useEffect(\n    () => {\n      function onKeyDown(ev: KeyboardEvent) {\n        if (ev.defaultPrevented) {\n          return;\n        }\n\n        let handled = false;\n\n        // Chrome won't trigger keypress for any keys that can invoke browser\n        // actions.\n        if (ev.keyCode === 8) { // Backspace\n          props.backspace();\n          handled = true;\n        }\n\n        if (handled) {\n          ev.preventDefault();\n        }\n      }\n\n      function onKeyPress(ev: KeyboardEvent) {\n        if (ev.defaultPrevented) {\n          return;\n        }\n\n        let handled = false;\n\n        if (ev.keyCode === 13) { // Enter\n          onNextClick();\n          handled = true;\n        } else if (ev.charCode >= 49 && ev.charCode <= 54) { // '1' through '6'\n          // The braille dots are bitfields, so calculate the value based on the key\n          // pressed.\n          // TODO: This should probably be in puzzle-lib.\n          onCharacterClick(Math.pow(2, ev.charCode - 49));\n        }\n\n        if (handled) {\n          ev.preventDefault();\n        }\n      }\n\n      document.addEventListener('keydown', onKeyDown);\n      document.addEventListener('keypress', onKeyPress);\n\n      return () => {\n        document.removeEventListener('keydown', onKeyDown);\n        document.removeEventListener('keypress', onKeyPress);\n      };\n    });\n\n  function onBackspaceClick() {\n    props.backspace();\n  }\n\n  function onCharacterClick(mask: Dot) {\n    const character = new Character(props.encoding);\n    character.toggle(mask);\n    props.setEncoding(character.encoding);\n  }\n\n  function onClearClick() {\n    props.clear();\n  }\n\n  function onNextClick() {\n    const character = new Character(props.encoding);\n    if (character.valid()) {\n      props.append(character.valueOf());\n    } else {\n      props.space();\n    }\n  }\n\n  const character = new Character(props.encoding);\n\n  return (\n    <div className=\"BrailleStream\">\n      <Card className=\"BrailleStream-input\">\n        <Card.Header>Input</Card.Header>\n        <Card.Body>\n          <Container fluid={true}>\n            <Row>\n              <Col\n                xs=\"auto\"\n                sm=\"auto\"\n                md=\"auto\"\n              >\n                <BrailleCharacter\n                  character={character}\n                  onClick={onCharacterClick}\n                />\n              </Col>\n              <Col className=\"BrailleStream-view\">\n                {character.toString() || '?'}\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <ButtonToolbar>\n                  <ButtonGroup>\n                    <Button onClick={onBackspaceClick}>&#x232b;</Button>\n                  </ButtonGroup>\n                  <ButtonGroup>\n                    <Button onClick={onNextClick}>Next</Button>\n                  </ButtonGroup>\n                  <ButtonGroup>\n                    <Button\n                      onClick={onClearClick}\n                      variant=\"danger\"\n                    >\n                      Clear\n                    </Button>\n                  </ButtonGroup>\n                </ButtonToolbar>\n              </Col>\n            </Row>\n          </Container>\n        </Card.Body>\n      </Card>\n      <Card>\n        <Card.Header>Output</Card.Header>\n        <Card.Body>\n          <pre className=\"BrailleStream-output\">\n            {new Stream(props.stream).toString()}<span className=\"blinking-cursor\">|</span>\n          </pre>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default connector(BrailleStream);\n","import { BrailleCharacter as Character, BrailleDot as Dot } from 'puzzle-lib';\n\ninterface Props {\n  width: number;\n  character: Character;\n}\n\nfunction BraillePicture(props: Props) {\n  function brailleDot(dot: Dot, x: number, y: number) {\n    return (\n      <use\n        transform={`translate(${x}, ${y})`}\n        xlinkHref={props.character.get(dot) ? '#FullDot' : '#EmptyDot'}\n      />\n    );\n  }\n\n  // 12x12 Circles with padding width 6 between them.  Padding width 2 on the edges.\n  return (\n    <svg width={props.width} viewBox=\"0 0 34 52\">\n      <defs>\n        <g id=\"FullDot\">\n          <circle r=\"6\" fill=\"black\" cx=\"0\" cy=\"0\" />\n        </g>\n        <g id=\"EmptyDot\">\n          <circle r=\"6\" fill=\"transparent\" strokeWidth=\"1\" stroke=\"black\" cx=\"0\" cy=\"0\" />\n        </g>\n      </defs>\n      {brailleDot(Dot.UpperLeft, 8, 8)}\n      {brailleDot(Dot.UpperRight, 26, 8)}\n      {brailleDot(Dot.MiddleLeft, 8, 26)}\n      {brailleDot(Dot.MiddleRight, 26, 26)}\n      {brailleDot(Dot.LowerLeft, 8, 44)}\n      {brailleDot(Dot.LowerRight, 26, 44)}\n      Sorry, your browser does not support inline SVG.\n        </svg>\n  );\n}\n\nexport default BraillePicture;\n","import { BrailleCharacter as Character } from 'puzzle-lib';\nimport ReferenceList from '../../../Common/ReferenceList';\nimport BraillePicture from './BraillePicture';\n\nfunction BrailleReference() {\n  const characters = new Character().getPotentialMatches();\n  return (\n    <ReferenceList>\n      {characters.map((entry) => (\n        <div key={`${entry.encoding}_${entry.display}`}>\n          <BraillePicture\n            width={40}\n            character={new Character(entry.encoding, entry.category)}\n          />\n          <br />{entry.display}\n        </div>\n      ))}\n    </ReferenceList>\n  );\n}\n\nexport default BrailleReference;\n","import Tab from 'react-bootstrap/Tab';\nimport Tabs from 'react-bootstrap/Tabs';\nimport { connect, ConnectedProps } from 'react-redux';\nimport PuzzToolPage from '../../../Common/PuzzToolPage';\nimport { RootState } from '../../../Store/rootReducer';\nimport { selectTab } from './brailleEncodingSlice';\nimport BrailleStream from './BrailleStream';\nimport BrailleReference from './BrailleReference';\n\nconst mapStateToProps = (state: RootState) => ({\n  selectedTab: state.encoding.braille.selectedTab,\n});\nconst mapDispatchToProps = {\n  selectTab,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface Props extends ConnectedProps<typeof connector> { }\n\nfunction Braille(props: Props) {\n  return (\n    <PuzzToolPage title=\"Braille\">\n      <Tabs\n        activeKey={props.selectedTab}\n        id=\"Braille-tabs\"\n        onSelect={props.selectTab}\n      >\n        <Tab eventKey=\"1\" title=\"Value\">\n          <BrailleStream />\n        </Tab>\n        <Tab eventKey=\"2\" title=\"Reference\">\n          <BrailleReference />\n        </Tab>\n      </Tabs>\n    </PuzzToolPage>\n  );\n}\n\nexport default connector(Braille);\n"],"sourceRoot":""}