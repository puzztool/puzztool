{"version":3,"file":"static/js/237.cd621b02.chunk.js","mappings":"0JAeKA,E,qHCdL,EAA4B,qCAA5B,EAAyE,iC,UDcpEA,SAAAA,GAAAA,EAAAA,EAAAA,WAAAA,GAAAA,aAAAA,EAAAA,EAAAA,MAAAA,GAAAA,QAAAA,CAAAA,IAAAA,EAAAA,KAKL,IAIMC,EAAqB,CACzBC,MAAAA,EAAAA,GACAC,eAAAA,EAAAA,GACAC,QAAAA,EAAAA,IAgFF,OA7EkBC,EAAAA,EAAAA,KAVM,SAACC,GAAD,MAAuB,CAC7CC,YAAaD,EAAME,SAASC,YAAYF,YACxCG,KAAMJ,EAAME,SAASC,YAAYC,QAQQT,EA6E3C,EAvEA,SAA2BU,GACzB,IAAMC,GAAWC,EAAAA,EAAAA,KAUjB,OACE,iBAAKC,UAAWC,EAAhB,WACE,UAACC,EAAA,EAAD,CAAMF,UAAWC,EAAjB,WACE,SAACC,EAAA,SAAD,UAAcL,EAAMM,UACpB,UAACD,EAAA,OAAD,YACE,SAACE,EAAA,EAAD,CACEC,SAVV,SAAuBC,GACrBT,EAAMP,QAAQgB,EAAMC,cAAcC,QAU1BC,YAAY,OACZC,IAAKZ,EACLU,MAAOX,EAAMD,QAEf,UAACe,EAAA,EAAD,YACE,UAACC,EAAA,EAAD,CACEC,KAAK,gCACLR,SAAU,SAACG,GAAD,OACRX,EAAMR,eAAemB,IAAUtB,EAAe4B,aAEhDC,KAAK,QACLP,MACEX,EAAMJ,YACFP,EAAe4B,WACf5B,EAAe8B,MATvB,WAYE,SAACC,EAAA,EAAD,CACEC,GAAG,2CACHV,MAAOtB,EAAe4B,WACtBK,QAAQ,kBAHV,yBAOA,SAACF,EAAA,EAAD,CACEC,GAAG,sCACHV,MAAOtB,EAAe8B,MACtBG,QAAQ,kBAHV,uBAQF,SAACC,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,CAAQC,QAhDpB,WACEzB,EAAMT,SA+CmC+B,QAAQ,SAAvC,+BAOR,UAACjB,EAAA,EAAD,YACE,SAACA,EAAA,SAAD,sBACA,SAACA,EAAA,OAAD,WACE,yBACGqB,EAAAA,GAAAA,cAAgC1B,EAAMD,KAAMC,EAAMJ,cACjD,iBEnEd,MARA,WACE,OACE,SAAC+B,EAAA,EAAD,CAAcC,aArBd,iCACE,mQAMA,iEACA,2BACE,gDACA,gEACA,uEACA,gDACA,yDAQyCC,MAAM,cAAnD,UACE,SAAC,EAAD,CAAmBvB,OAAO","sources":["Features/Encoding/AutoConvert/AutoConvertStream.tsx","webpack://puzztool/./src/Features/Encoding/AutoConvert/AutoConvertStream.module.scss?8d1b","Features/Encoding/AutoConvert/index.tsx"],"sourcesContent":["import { StringAutoConvert } from \"puzzle-lib\";\nimport { ChangeEvent, ReactChild } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Card from \"react-bootstrap/Card\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\nimport { connect, ConnectedProps } from \"react-redux\";\nimport { useFocusInput } from \"../../../Hooks/FocusInput\";\nimport { RootState } from \"../../../Store/rootReducer\";\nimport { clear, setHomogeneous, setText } from \"./autoConvertSlice\";\nimport styles from \"./AutoConvertStream.module.scss\";\n\nenum ConversionMode {\n  consistent,\n  mixed,\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  homogeneous: state.encoding.autoConvert.homogeneous,\n  text: state.encoding.autoConvert.text,\n});\nconst mapDispatchToProps = {\n  clear,\n  setHomogeneous,\n  setText,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface Props extends ConnectedProps<typeof connector> {\n  prompt: ReactChild | ReactChild[];\n}\n\nfunction AutoConvertStream(props: Props) {\n  const inputRef = useFocusInput();\n\n  function onClearClick() {\n    props.clear();\n  }\n\n  function onTextChanged(event: ChangeEvent<HTMLInputElement>) {\n    props.setText(event.currentTarget.value);\n  }\n\n  return (\n    <div className={styles.container}>\n      <Card className={styles.input}>\n        <Card.Header>{props.prompt}</Card.Header>\n        <Card.Body>\n          <FormControl\n            onChange={onTextChanged}\n            placeholder=\"Text\"\n            ref={inputRef}\n            value={props.text}\n          />\n          <ButtonToolbar>\n            <ToggleButtonGroup\n              name=\"AutoConvertStream-homogeneous\"\n              onChange={(value) =>\n                props.setHomogeneous(value === ConversionMode.consistent)\n              }\n              type=\"radio\"\n              value={\n                props.homogeneous\n                  ? ConversionMode.consistent\n                  : ConversionMode.mixed\n              }\n            >\n              <ToggleButton\n                id=\"AutoConvertStream-homogeneous-consistent\"\n                value={ConversionMode.consistent}\n                variant=\"outline-primary\"\n              >\n                Consistent\n              </ToggleButton>\n              <ToggleButton\n                id=\"AutoConvertStream-homogeneous-mixed\"\n                value={ConversionMode.mixed}\n                variant=\"outline-primary\"\n              >\n                Mixed\n              </ToggleButton>\n            </ToggleButtonGroup>\n            <ButtonGroup>\n              <Button onClick={onClearClick} variant=\"danger\">\n                Clear\n              </Button>\n            </ButtonGroup>\n          </ButtonToolbar>\n        </Card.Body>\n      </Card>\n      <Card>\n        <Card.Header>Output</Card.Header>\n        <Card.Body>\n          <pre>\n            {StringAutoConvert.convertString(props.text, props.homogeneous) ||\n              \" \"}\n          </pre>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default connector(AutoConvertStream);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AutoConvertStream_container__CJB2b\",\"input\":\"AutoConvertStream_input__++2Zt\"};","import PuzzToolPage from \"../../../Common/PuzzToolPage\";\nimport AutoConvertStream from \"./AutoConvertStream\";\n\nfunction getDescription() {\n  return (\n    <>\n      <p>\n        AutoConvert will automatically detect and convert several encodings -\n        simply enter your ciphertext. If all of your text is in the same\n        encoding, you can select \"force consistent encoding\". This can be useful\n        for ambigious strings.\n      </p>\n      <p>Some of the supported encodings are:</p>\n      <ul>\n        <li>ASCII (A=65, B=66)</li>\n        <li>Five bit binary (A=00001, B=00010)</li>\n        <li>Eight bit binary (A=01100001, B=01100010)</li>\n        <li>Ordinal (A=1, B=2)</li>\n        <li>Ternary (A=001, E=012)</li>\n      </ul>\n    </>\n  );\n}\n\nfunction AutoConvert() {\n  return (\n    <PuzzToolPage description={getDescription()} title=\"AutoConvert\">\n      <AutoConvertStream prompt=\"Input\" />\n    </PuzzToolPage>\n  );\n}\n\nexport default AutoConvert;\n"],"names":["ConversionMode","mapDispatchToProps","clear","setHomogeneous","setText","connect","state","homogeneous","encoding","autoConvert","text","props","inputRef","useFocusInput","className","styles","Card","prompt","FormControl","onChange","event","currentTarget","value","placeholder","ref","ButtonToolbar","ToggleButtonGroup","name","consistent","type","mixed","ToggleButton","id","variant","ButtonGroup","Button","onClick","StringAutoConvert","PuzzToolPage","description","title"],"sourceRoot":""}