{"version":3,"sources":["Features/Cipher/Caesar/CaesarList.tsx","Features/Cipher/Caesar/CaesarStream.tsx","Features/Cipher/Caesar/index.tsx"],"names":["CaesarList","props","className","list","map","value","index","toString","padStart","mapDispatchToProps","clear","setText","connector","connect","state","text","cipher","caesar","inputRef","useFocusInput","Card","Header","prompt","Body","FormControl","onChange","event","currentTarget","placeholder","ref","ButtonToolbar","ButtonGroup","Button","onClick","variant","CaesarString","getRotations","Caesar","PuzzToolPage","description","title"],"mappings":"yQA0BeA,MApBf,SAAoBC,GAalB,OACE,qBAAKC,UAAU,aAAf,SAZOD,EAAME,KAAKC,KAAI,SAACC,EAAeC,GACpC,OAAc,IAAVA,EACK,KAIP,gCAAkBA,EAAMC,WAAWC,SAAS,GAA5C,KAAkDH,IAAxCC,SCGZG,G,OAAqB,CACzBC,UACAC,cAqDaC,MAlDGC,aARM,SAACC,GAAD,MAAuB,CAC7CC,KAAMD,EAAME,OAAOC,OAAOF,QAOeN,EAkD5BG,EA5Cf,SAAsBX,GACpB,IAAMiB,EAAWC,cAUjB,OACE,sBAAKjB,UAAU,eAAf,UACE,eAACkB,EAAA,EAAD,CAAMlB,UAAU,qBAAhB,UACE,cAACkB,EAAA,EAAKC,OAAN,UAAcpB,EAAMqB,SACpB,eAACF,EAAA,EAAKG,KAAN,WACE,cAACC,EAAA,EAAD,CACEC,SAVV,SAAuBC,GACrBzB,EAAMU,QAAQe,EAAMC,cAActB,QAU1BuB,YAAY,OACZC,IAAKX,EACLb,MAAOJ,EAAMc,OAEf,cAACe,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,QAtBd,WACEhC,EAAMS,SAsBMwB,QAAQ,SAFV,6BAUR,eAACd,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,qBACA,cAACD,EAAA,EAAKG,KAAN,UACE,cAAC,EAAD,CAAYpB,KAAM,IAAIgC,eAAalC,EAAMc,MAAMqB,4BC/C1CC,UAVf,WACE,OACE,cAACC,EAAA,EAAD,CAAcC,YANO,kJAMwBC,MAP9B,gBAOf,SACE,cAAC,EAAD,CACElB,OAAO","file":"static/js/11.b335dd75.chunk.js","sourcesContent":["import './CaesarList.scss';\n\ninterface Props {\n  list: string[];\n}\n\nfunction CaesarList(props: Props) {\n  function renderListItems() {\n    return props.list.map((value: string, index: number) => {\n      if (index === 0) {\n        return null;\n      }\n\n      return (\n        <div key={index}>{index.toString().padStart(2)}: {value}</div>\n      );\n    });\n  }\n\n  return (\n    <pre className=\"CaesarList\">\n      {renderListItems()}\n    </pre>\n  );\n}\n\nexport default CaesarList;\n","import { CaesarString } from 'puzzle-lib';\nimport React, { ChangeEvent } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport Card from 'react-bootstrap/Card';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { connect, ConnectedProps } from 'react-redux';\nimport { useFocusInput } from '../../../Hooks/FocusInput';\nimport { RootState } from '../../../Store/rootReducer';\nimport { clear, setText } from './caesarCipherSlice';\nimport CaesarList from './CaesarList';\nimport './CaesarStream.scss';\n\nconst mapStateToProps = (state: RootState) => ({\n  text: state.cipher.caesar.text,\n});\nconst mapDispatchToProps = {\n  clear,\n  setText,\n};\n\nconst connector = connect(mapStateToProps, mapDispatchToProps);\n\ninterface Props extends ConnectedProps<typeof connector> {\n  prompt: JSX.Element | string;\n}\n\nfunction CaesarStream(props: Props) {\n  const inputRef = useFocusInput();\n\n  function onClearClick() {\n    props.clear();\n  }\n\n  function onTextChanged(event: ChangeEvent<HTMLInputElement>) {\n    props.setText(event.currentTarget.value);\n  }\n\n  return (\n    <div className=\"CaesarStream\">\n      <Card className=\"CaesarStream-input\">\n        <Card.Header>{props.prompt}</Card.Header>\n        <Card.Body>\n          <FormControl\n            onChange={onTextChanged}\n            placeholder=\"Text\"\n            ref={inputRef}\n            value={props.text}\n          />\n          <ButtonToolbar>\n            <ButtonGroup>\n              <Button\n                onClick={onClearClick}\n                variant=\"danger\"\n              >\n                Clear\n              </Button>\n            </ButtonGroup>\n          </ButtonToolbar>\n        </Card.Body>\n      </Card>\n      <Card>\n        <Card.Header>Output</Card.Header>\n        <Card.Body>\n          <CaesarList list={new CaesarString(props.text).getRotations()} />\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default connector(CaesarStream);\n","import PuzzToolPage from '../../../Common/PuzzToolPage';\nimport CaesarStream from './CaesarStream';\n\nconst PAGE_TITLE = \"Caesar Cipher\";\nconst PAGE_DESCRIPTION = \"A Caesar cipher works by shifting every letter by \" +\n  \"a fixed amount. This is a simple cipher - there are only 25 different \" +\n  \"shifts for each letter.\";\n\nfunction Caesar() {\n  return (\n    <PuzzToolPage description={PAGE_DESCRIPTION} title={PAGE_TITLE}>\n      <CaesarStream\n        prompt=\"Type in your text, and all possible shifts will be displayed.\"\n      />\n    </PuzzToolPage>\n  );\n}\n\nexport default Caesar;\n"],"sourceRoot":""}